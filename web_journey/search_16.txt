// UCFirst

function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

#########################################################

Bootstrap grid examples
https://getbootstrap.com/examples/grid/
http://getbootstrap.com/
http://fontawesome.io/icon/sticky-note-o/

#########################################################

jQueryâ€™s .each() Syntax
https://www.sitepoint.com/jquery-each-function-examples/

$('div').each(function (index, value) {
  console.log('div' + index + ':' + $(this).attr('id'));
});

$.each(arr, function (index, value) {
  	console.log(value);
});

$.each(obj, function (index, value) {
	console.log(value);
});


$.each(json, function () {
   $.each(this, function (name, value) {
      console.log(name + '=' + value);
   });
});

#########################################################

Add row
http://jsfiddle.net/ambiguous/LAECx/

$("input.tr_clone_add").live('click', function() {
    var $tr    = $(this).closest('.tr_clone');
    var $clone = $tr.clone();
    $clone.find(':text').val('');
    $tr.after($clone);
});

Add row
http://jsfiddle.net/kQpfE/2/

$("#btnAdd").on("click",function(){
var $tableBody = $('#tbl').find("tbody"),
        $trLast = $tableBody.find("tr:last"),
        $trNew = $trLast.clone();

    $trLast.after($trNew);
});

#########################################################

http://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript
Math.random().toString(36).replace(/[^a-z]+/g, '')
Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);
(Math.random() + 1).toString(36).substring(7);
(Math.random().toString(36)+'00000000000000000').slice(2, N+2)
Array(N+1).join((Math.random().toString(36)+'00000000000000000').slice(2, 18)).slice(0, N)

#########################################################

<script type="text/javascript">
    $(function ($) {

        // clone rows
        for(var i = 0; i < 500; i ++){
            var $tableBody = $('#tableid').find("tbody"),
                $trLast = $tableBody.find("tr:last"),
                $trNew = $trLast.clone();
                $trLast.after($trNew);
        }

        $('#tableid tr').each(function (index, value) {
            //console.log('' + index + ':' + $(this).find("td:eq(0)").text());
            $(this).find("td:eq(0)").text(Math.floor(Math.random() * 2000000 + 20000000))
            $(this).find("td:eq(1)").text(Math.floor(Math.random() * 4000000 + 40000000))

            //
            $(this).find("td:eq(4)").html('<span class="label label-warning arrowed arrowed-right">'+$(this).find("td:eq(4)").text()+'</span>')

            // random name
            //$(this).find("td:eq(3)").text( Math.random().toString(36).replace(/[^a-z]+/g, '') + ' ' + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) )
        });

        var myTable = $('#tableid').DataTable({
            "lengthMenu": [[15, 25, 50, 5, 10, -1], [ 15, 25, 50, 5,10, "All"]]
        });

        $('.loader').css("display", "none");

    });
</script>

################################################

https://gauntface.github.io/simple-push-demo/
https://gauntface.github.io/simple-push-demo/scripts/push-client.js
https://gauntface.github.io/simple-push-demo/scripts/app-controller.js
https://gauntface.github.io/simple-push-demo/scripts/main.js
https://gauntface.github.io/simple-push-demo/scripts/libs/idb-keyval.js

https://developer.mozilla.org/en-US/docs/Web/API/Notification/close
https://developer.mozilla.org/en-US/docs/Web/API/notification
https://developer.mozilla.org/de/docs/Web/API/ServiceWorkerContainer/register
https://developer.mozilla.org/de/docs/Web/API/ServiceWorkerRegistration
https://developer.mozilla.org/de/docs/Web/API/Service_Worker_API
https://developer.mozilla.org/de/docs/Web/API/ServiceWorkerContainer/register
https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers
https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers
https://developer.mozilla.org/en-US/docs/Web/API/Push_API
https://support.mozilla.org/de/kb/push-benachrichtigungen-firefox?as=u&utm_source=inproduct
https://developers.google.com/web/updates/2015/03/push-notifications-on-the-open-web

https://github.com/WICG/BackgroundSync
https://github.com/goldhand/sw-precache-webpack-plugin
https://github.com/mdn/sw-test

--------

if ('serviceWorker' in navigator) {
  document.querySelector('#availability').innerText = 'are';
  document.querySelector('#controlled').innerText = navigator.serviceWorker.controller ? 'is' : 'is not';
  navigator.serviceWorker.register('service-worker.js', {scope: './'}).then(function(registration) {
    document.querySelector('#register').textContent = 'succeeded';
  }).catch(function(error) {
    document.querySelector('#register').textContent = 'failed: ' + error;
  });
} else {
  document.querySelector('#availability').innerText = 'are not';
}


--------

if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('service-worker.js', {scope: './'}).then(function(registration) {
    document.querySelector('#status').textContent = 'succeeded';
  }).catch(function(error) {
    document.querySelector('#status').textContent = error;
  });
} else {
  // The current browser doesn't support service workers.
  var aElement = document.createElement('a');
  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';
  aElement.textContent = 'unavailable';
  document.querySelector('#status').appendChild(aElement);
}

--------

(function() {
  if('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/my-service-worker.js');
  }
})();
--------

var isPushEnabled = false;

window.addEventListener('load', function() {
  var pushButton = document.querySelector('.js-push-button');
  pushButton.addEventListener('click', function() {
    if (isPushEnabled) {
      unsubscribe();
    } else {
      subscribe();
    }
  });

  // Check that service workers are supported, if so, progressively
  // enhance and add push messaging support, otherwise continue without it.
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/service-worker.js')
    .then(initialiseState);
  } else {
    console.warn('Service workers aren\'t supported in this browser.');
  }
});

-----

navigator.serviceWorker.register('/serviceworker.js', {scope: '/'})
  .then(function (registration) {
    var serviceWorker;
    if (registration.installing) {
      serviceWorker = registration.installing;
    } else if (registration.waiting) {
      serviceWorker = registration.waiting;
    } else if (registration.active) {
      serviceWorker = registration.active;
    }

    if (serviceWorker) {
      console.log("ServiceWorker phase:", serviceWorker.state);

      serviceWorker.addEventListener('statechange', function (e) {
        console.log("ServiceWorker phase:", e.target.state);
      });
    }
  }).catch(function (err) {
    console.log('ServiceWorker registration failed: ', err);
  });

------

if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/sw-test/sw.js', {scope: '/sw-test/'})
  .then(function(reg) {
    // registration worked
    console.log('Registration succeeded. Scope is ' + reg.scope);
  }).catch(function(error) {
    // registration failed
    console.log('Registration failed with ' + error);
  });
}

------

sync

try {
  var value = myFunction();
  console.log(value);
} catch(err) {
  console.log(err);
}

async

myFunction().then(function(value) {
  console.log(value);
}).catch(function(err) {
  console.log(err);
});

------

this.addEventListener('install', function(event) {
  event.waitUntil(
    caches.open('v1').then(function(cache) {
      return cache.addAll([
        '/sw-test/',
        '/sw-test/index.html',
        '/sw-test/style.css',
        '/sw-test/app.js',
        '/sw-test/image-list.js',
        '/sw-test/star-wars-logo.jpg',
        '/sw-test/gallery/bountyHunters.jpg',
        '/sw-test/gallery/myLittleVader.jpg',
        '/sw-test/gallery/snowTroopers.jpg'
      ]);
    })
  );
});

this.addEventListener('fetch', function(event) {
  event.respondWith(caches.match(event.request).catch(function() {
    return fetch(event.request);
  }).then(function(response) {
    caches.open('v1').then(function(cache) {
      cache.put(event.request, response);
    });
    return response.clone();
  }).catch(function() {
    return caches.match('/sw-test/gallery/myLittleVader.jpg');
  }));
});

-----

new Response('Hello from your friendly neighbourhood service worker!');
new Response('<p>Hello from your friendly neighbourhood service worker!</p>', {
  headers: { 'Content-Type': 'text/html' }
});

-----

if (!("Notification" in window) || (Notification.permission === "denied") ) {
    	// use (window||Worker).postMessage() fallback ...
	// Worker.postMessage()
}

// http://stackoverflow.com/questions/33687298/how-to-send-push-notification-to-web-browser
// https://www.html5rocks.com/en/tutorials/eventsource/basics/
// https://www.w3.org/TR/eventsource/

if (!!window.EventSource) {
  var source = new EventSource('stream.php');
} else {
  // Result to xhr polling :(
}

----

<button onclick="notifyMe()">Notify me!</button>

function notifyMe() {
  // Let's check if the browser supports notifications
  if (!("Notification" in window)) {
    alert("This browser does not support desktop notification");
  }

  // Let's check whether notification permissions have already been granted
  else if (Notification.permission === "granted") {
    // If it's okay let's create a notification
    var notification = new Notification("Hi there!");
  }

  // Otherwise, we need to ask the user for permission
  else if (Notification.permission !== "denied") {
    Notification.requestPermission(function (permission) {
      // If the user accepts, let's create a notification
      if (permission === "granted") {
        var notification = new Notification("Hi there!");
      }
    });
  }

  // At last, if the user has denied notifications, and you
  // want to be respectful there is no need to bother them any more.
}


setTimeout(function() { notification.close() }, 2000);

Notification.requestPermission().then(function(result) {
  console.log(result);
});

function spawnNotification(theBody,theIcon,theTitle) {
  var options = {
      body: theBody,
      icon: theIcon
  }
  var n = new Notification(theTitle,options);
}

https://jsfiddle.net/api/mdn/
https://developer.mozilla.org/en-US/docs/Web/API/notification

---
https://davidwalsh.name/notifications-api

if(window.Notification && Notification.permission !== "denied") {
	Notification.requestPermission(function(status) {  // status is "granted", if accepted by user
		var n = new Notification('Title', {
			body: 'I am the body text!',
			icon: '/path/to/icon.png' // optional
		});
	});
}



setTimeout(function() { n.close(); }, 2000);

-----

http://stackoverflow.com/questions/6928533/calling-a-webmethod-with-jquery-in-asp-net-webforms
http://stackoverflow.com/questions/15505715/is-it-possible-to-show-a-popup-from-a-web-service
http://stackoverflow.com/questions/31886513/how-do-i-properly-set-a-close-timeout-on-desktop-notifications-created-by-the-br
http://stackoverflow.com/questions/30269573/register-service-worker-in-angular-js-application