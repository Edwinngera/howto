
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PHP tester
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://phptester.net/
http://sandbox.onlinephpfunctions.com/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PL tester
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://www.tutorialspoint.com/execute_perl_online.php
https://www.jdoodle.com/execute-perl-online

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
REGEX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://regex101.com/
https://www.phpliveregex.com/
https://www.regextester.com
https://www.regexplanet.com/advanced/perl/index.html
http://www.regexe.com/
https://regexr.com/
http://jkorpela.fi/perl/regexp.html


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Regex PERL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
über mehrere Zeilen (m)
einzelne Zeile (s)
Groß-/Kleinschreibung ignorieren (i)
Erweitert mit Leerzeichen und Kommentaren (x)
übereinstimmenden Strings behalten (p)
Muster überall finden (g)
Die aktuelle Position merken (c)
Verwende ASCII-Zeichensatz Regeln (a)
Verwende Standard-Zeichensatz Regeln (d)
Verwende locale charset Regeln (l)
Verwende Unicode-Zeichensatz Regeln (u)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL comparison
https://alvinalexander.com/blog/post/perl/perl-if-else-elsif-syntax-example
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           Numeric Test      String Test
Equal                           ==                eq
Not equal                       !=                ne
Less than                       <                 lt
Greater than                    >                 gt
Less than or equal to           <=                le
Greater than or equal to        >=                ge

-----------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL REGEX
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

https://stackoverflow.com/questions/24665994/using-grep-linux-command-with-perl-regex-capturing-groups
echo 'foosomething' | grep -Po '\w+\Ksomething'
echo 'foosomething' | grep -Po '(?<=\w+)something'
echo 'foosomethingbar' | grep -Po 'foo\K.*?(?=bar)'
echo 'foosomethingbar' | grep -Po '(?<=foo).*?(?=bar)'
perl -lwe 'print $ENV{var} =~ /a(\d+)/;'

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL Backticks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://metacpan.org/pod/perlop#Backticks
https://stackoverflow.com/questions/4443659/calling-command-from-perl-need-to-see-output

Backticks, or the qx command, run a command in a separate process and returns the output:

print `$command`;
print qx($command);

print << `EOC`; # execute command and get results
echo hi there
EOC

-----------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Unless statement in Perl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://users.cs.cf.ac.uk/Dave.Marshall/PERL/node45.html
https://beginnersbook.com/2017/02/unless-statement-in-perl/
https://perldoc.perl.org/perlsyn.html#Compound-Statements
http://www.perltutorial.org/perl-unless/
https://www.tutorialspoint.com/perl/perl_unless_statement.htm

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
commandline
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://www.perl.com/pub/2004/08/09/commandline.html/
http://perl101.org/command-line-switches.html
https://perlmaven.com/perl-on-the-command-line
https://www.computerhope.com/unix/uperl.htm


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Perl -X operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://perlmaven.com/file-test-operators
Description taken from the official documentation of Perl:

-r File is readable by effective uid/gid.
-w File is writable by effective uid/gid.
-x File is executable by effective uid/gid.
-o File is owned by effective uid.

-R File is readable by real uid/gid.
-W File is writable by real uid/gid.
-X File is executable by real uid/gid.
-O File is owned by real uid.

-e File exists.
-z File has zero size (is empty).
-s File has nonzero size (returns size in bytes).

-f File is a plain file.
-d File is a directory.
-l File is a symbolic link (false if symlinks aren't supported by the file system).
-p File is a named pipe (FIFO), or Filehandle is a pipe.
-S File is a socket.
-b File is a block special file.
-c File is a character special file.
-t Filehandle is opened to a tty.

-u File has setuid bit set.
-g File has setgid bit set.
-k File has sticky bit set.

-T File is an ASCII or UTF-8 text file (heuristic guess).
-B File is a "binary" file (opposite of -T).

-M Script start time minus file modification time, in days.
-A Same for access time.
-C Same for inode change time (Unix, may differ for other platforms)


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL getpwuid
https://perldoc.perl.org/5.8.9/functions/getpwuid.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL umask
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://perldoc.perl.org/functions/umask.html
http://php.net/manual/de/function.umask.php

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PERL subroutines
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://perl101.org/subroutines.html

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Perl sort keys
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://perlmaven.com/how-to-sort-a-hash-in-perl
https://perldoc.perl.org/functions/keys.html
https://alvinalexander.com/perl/edu/qanda/plqa00015
http://www.woolfit.net/perl/23sortinghashes.html
https://www.perl.com/article/27/2013/6/16/Perl-hash-basics--create--update--loop--delete-and-sort/


-----------------------------------------------------------------------------------------------

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
posix_getpwuid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://php.net/manual/de/function.getmyuid.php
http://php.net/manual/en/function.posix-getpwuid.php
http://php.net/manual/en/ref.posix.php
http://php.net/manual/en/function.getmyuid.php
http://php.net/manual/en/function.get-current-user.php

getmygid() - Get PHP script owner's GID
getmypid() - Gets PHP's process ID
get_current_user() - Gets the name of the owner of the current PHP script
getmyinode() - Gets the inode of the current script
getlastmod() - Gets time of last page modification

-----------------------------------------------------------------------------------------------

https://www.it-zoom.de/mobile-business/e/deep-learning-in-medizin-logistik-und-anderswo-20390/
https://www.derbrutkasten.com/greenhive-drohne-statt-traktor-fuer-weingueter/


https://www.similarweb.com/top-websites
https://www.alexa.com/topsites


https://twitter.com/jetbrains/status/885138538957819904
https://www.reddit.com/r/phpstorm/comments/8yk9cv/indexing_takes_ages_at_100cpu_and_cpu_throttles/


-----------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Musikerkennung
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://www.midomi.com/
http://www.musipedia.org/
https://www.shazam.com/de

http://www.wildbits.com/tunatic/
https://www.guidingtech.com/8572/identify-song-by-humming-tune-using-3-web-apps/
https://mashable.com/2010/03/30/identify-song-apps/?europe=true#ytwim5st0mqy
https://windowsreport.com/music-recognition-software/
https://chrome.google.com/webstore/search/Musikerkennung

-----------------------------------------------------------------------------------------------
https://soundcloud.com/t3n-podcast
https://soundcloud.com/t3n-podcast/ki-konkret-einsetzen-unternehmen

https://www.youtube.com/watch?v=wHJTZ7k0BXU
https://www.youtube.com/watch?v=NXMGi9kQ3TE
https://www.youtube.com/watch?v=JU9OFtcQsy4
https://www.youtube.com/watch?v=Bw3Agf7NHZ0
https://www.youtube.com/watch?v=CajAq6ndJYE
https://www.youtube.com/watch?v=nnF2yua4KIw

https://t3n.de/news/alles-ueber-ki-wissen-t3n-1100259/
https://t3n.de/news/samsung-138-milliarden-fuer-ki-1101054/
https://www.golem.de/news/elektromobilitaet-regierung-bremst-bei-anspruch-auf-private-ladesaeulen-1807-135521.html

-----------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~
php reddit
~~~~~~~~~~~~~~~~~~~~~~~~~~~

https://www.youtube.com/watch?v=2FBHiz7ANEI
https://blog.acolyer.org/2018/08/08/hhvm-jit-a-profile-guided-region-based-compiler-for-php-and-hack/
https://chrismm.com/blog/strategies-for-dealing-with-poor-code-in-limited-time/
https://www.pascallandau.com/blog/setup-phpstorm-with-xdebug-on-docker/
https://medium.com/@galopintitouan/tips-to-send-great-e-mails-with-symfony-a01ce41215be


https://medium.com/@alexkatrompas/java-will-kill-your-startup-php-will-save-it-f3051968145d
https://matthiasnoback.nl/2018/06/road-to-dependency-injection/
https://www.youtube.com/watch?v=pLcM3mpZSV0

IDE: Eclipse PDT, Zend Studio, VIsual Studio Code (VSCode), Netbeans
Rest:  Slim, Lumen , Symfony + FOSRestBundle https://github.com/lexik/LexikJWTAuthenticationBundle

https://www.droptica.com/blog/ideal-ide-and-linux-configuration-work-php-and-drupal/
https://github.com/socialite-manager/socialite
https://www.reddit.com/r/PHP/comments/92iii5/machine_learning_library_for_php/
https://www.reddit.com/r/PHP/comments/956wsk/what_is_your_take_on_defensive_programming_how_do/
https://www.reddit.com/r/PHP/comments/959su8/i_am_learning_elastic_search_for_this_purpose_i/
https://www.reddit.com/r/PHP/comments/95bgm2/i_need_advice_for_my_career/

https://murze.be/introducing-laravel-event-projector-the-easiest-way-to-get-started-with-event-sourcing-in-a-laravel-app
https://www.reddit.com/r/PHP/comments/8x2h10/company_with_old_techstack_try_to_upgrade_or_leave/
https://w3techs.com/technologies/comparison/pl-java,pl-php
https://wiki.php.net/rfc/typed_properties_v2
https://www.yukei.net/2016/11/big-companies-using-php/
https://www.youtube.com/watch?v=TOveFBc9AyI
https://www.youtube.com/watch?v=RlkCdM_f3p4
https://github.com/paratestphp/paratest
https://haydenjames.io/php-5-6-eol-end-of-life-php-7-compatibility-check/
https://wiki.php.net/rfc/deprecations_php_7_3
https://www.quora.com/Did-Facebook-move-away-totally-from-PHP
https://www.youtube.com/watch?v=pLcM3mpZSV0
https://christoph-rumpel.com/2018/05/how-i-built-the-laravelquiz-chatbot-with-botman-and-laravel
https://www.phptherightway.com/

http://phpsadness.com/
https://www.youtube.com/watch?v=0AZRp_8TT0U
http://symfony.com/doc/current/quick_tour/the_big_picture.html
https://blog.remirepo.net/post/2018/07/02/PHP-extensions-status-with-upcoming-PHP-7.3

-----------------------------------------------------------------------------------------------
https://www.reddit.com/user/nobrandheroes
https://www.reddit.com/r/recruitinghell/
https://pastebin.com/0bbr29XW



-----------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ubuntu speech-dispatcher
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

speech-dispatcher  is  a  server process that is responsible for trans‐
       forming requests for text-to-speech output into actual speech  hearable
       in the speakers.

spd-say Hello!

-----------------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=J75enyWdbBM
https://www.youtube.com/watch?v=ffxKSjUwKdU

php
http://php.net/manual/en/language.operators.comparison.php
http://php.net/manual/en/function.filetype.php
http://php.net/manual/de/function.is-file.php
http://php.net/manual/en/function.mime-content-type.php
http://php.net/manual/en/function.feof.php
http://php.net/manual/de/function.filesize.php
http://php.net/manual/de/function.getcwd.php
http://php.net/manual/de/function.ftp-chdir.php
http://php.net/manual/en/function.getmypid.php



https://alvinalexander.com/perl/perl-for-loop-next-continue
https://www.tutorialspoint.com/perl/perl_next_statement.htm
https://perldoc.perl.org/5.8.9/functions/next.html
http://perldoc.perl.org/functions/next.html
https://metacpan.org/pod/Net::SFTP
https://metacpan.org/pod/release/CLEACH/Net-FTPSSL-0.19/FTPSSL.pm
https://perldoc.perl.org/Net/FTP.html
https://perldoc.perl.org/File/Basename.html
https://perldoc.perl.org/functions/scalar.html
https://perldoc.perl.org/functions/undef.html
http://www.hidemail.de/blog/undef-perl.shtml
https://www.tutorialspoint.com/perl/perl_undef.htm
https://de.perlmaven.com/undef-und-defined-in-perl
http://www.tizag.com/perlT/perlif.php
https://perlmaven.com/if
https://perlmaven.com/argv-in-perl
https://de.wikibooks.org/wiki/Perl-Programmierung:_Kontrollstrukturen
http://www.perltutorial.org/perl-if/
http://www.aip.de/groups/soe/local/handbuch/html/tecf.htm
http://perl101.org/special-variables.html
http://www.perltutorial.org/perl-last/
http://perldoc.perl.org/Cwd.html
http://perldoc.perl.org/functions/last.html


http://www.tutorialspoint.com/perl/perl_special_variables.htm  ###############
$? - The status returned by the last pipe close, backtick (``) command, or system operator.
$@ - The Perl syntax error message from the last eval command.
$$ - The pid of the Perl process running this script.
$0 - Contains the name of the file containing the Perl script being executed.





http://phpseclib.sourceforge.net/sftp/intro.html
http://phpseclib.sourceforge.net/sftp/2.0/examples.html
http://phpseclib.sourceforge.net/new/sftp/examples.html
https://github.com/phpseclib/phpseclib
http://phpseclib.sourceforge.net/sftp/intro.html
https://api.phpseclib.org/master/phpseclib/Net/SFTP.html
http://phpseclib.sourceforge.net/sftp/examples.html
https://hotexamples.com/examples/phpseclib.net/SFTP/put/php-sftp-put-method-examples.html
https://github.com/phpseclib/phpseclib/blob/master/tests/Functional/Net/SFTPUserStoryTest.php



http://users.cs.cf.ac.uk/Dave.Marshall/Internet/node122.html
https://www.netkiller.cn/shell/bash/example.html

The CWD command -- Change Working Directory
The PWD command -- Print Working Directory


https://www.magentoextensions.org/documentation/class_magento_1_1_framework_1_1_filesystem_1_1_io_1_1_sftp.html
https://github.com/inviqa/magento-community/blob/master/lib/Varien/Io/Sftp.php
------------------------------------------------------------------------------------


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
What is $@ in Perl?
https://stackoverflow.com/questions/16293809/what-is-in-perl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# PERL ---------------------------------------
for $i(@myarr)
{
    #some stuff
    eval {
        #some stuff
    };
    if($@)
    {
        print "*** $@ ****";
    }
}


# PHP ---------------------------------------
for ($i=0; $i<$myarr;$i++)
{
    #some stuff
    try {
        #some stuff
    }
    catch(Exception $e)
    {
        print "*** $e->getMessage()****";
    }
}



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SFTP connection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#!/usr/bin/perl
use Net::SFTP;

sub ftp_send() {
    my($file) = @_;
    $sftp = Net::SFTP->new('xxx', user=>'zzz', password=>'yyy', debug=>1);
    $sftp->put("$homedir", "$remote");
    #close the SFTP connection here exit SFTP environment
}

if ($sth->rows > 0)
{
    while($href = $sth->fetchrow_hashref()) {
    $optCount++;
    &build_file($href);
    }

    $filename = 'test.txt';
    open(out, ">>/home/$filename") || die("Couldn't open data file $!\n");
    print out $table;
    close(out);
    &ftp_send($filename);

}



https://www.geany.org/Download/Releases
https://www.geany.org/
http://brackets.io/
https://github.com/adobe/brackets/releases/download/release-1.13/Brackets.Release.1.13.64-bit.deb



https://www.reddit.com/r/recruitinghell/
https://www.reddit.com/r/PHP/?count=150&after=t3_8wic2f

https://i.imgur.com/oRpEQFg.png