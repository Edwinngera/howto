
https://dict.leo.org/englisch-deutsch/abmischen


-----------------------------------------
https://www.jotform.com/blog/55-amazing-3d-abstract-artworks-wallpapers/
https://www.opendesktop.org/search/projectSearchText/abstract/page/6/f/tags


sudo apt install php7.2-cli
sudo apt install hhvm

#####################################################################
#
#	BATCH RENAME
#	Renaming hundreds of files at once for proper sorting
#
#	https://stackoverflow.com/questions/3211595/renaming-files-in-a-folder-to-sequential-numbers
#	https://askubuntu.com/questions/473236/renaming-hundreds-of-files-at-once-for-proper-sorting
#
#####################################################################

Rename batch 1-x
ls | cat -n | while read n f; do mv "$f" "$n.extension"; done

Rename batch 0001-000x
ls | cat -n | while read n f; do mv "$f" `printf "%04d.extension" $n`; done

rename -N 0001 -X 's/.*/$N/' *.jpg
rename -N 0001 's/.*/$N.jpg/' *.jpg
rename -e 's/.*/$N.jpg/' *.jpg
rename -e 's/.*/photo-$N.jpg/' *.jpg
rename 's/\d+/sprintf("%05d",$&)/e' *.jpg

num=0; for i in *; do mv "$i" "$(printf '%04d' $num).${i#*.}"; ((num++)); done
ls -1 -c | xargs rename -n 's/.*/our $i; sprintf("%04d.jpg", $i++)/e'
ls -1 -c | xargs rename -n 's/.*/our $i; if(!$i) { $i=123; } sprintf("%04d.jpg", $i++)/e'
ls *.JPG| awk 'BEGIN{ a=0 }{ printf "mv %s gopro_%04d.jpg\n", $0, a++ }' | bash


touch {1..19}.jpg
rename 's/\d+/sprintf("%05d", $&)/e' *.jpg

touch track_{9..11}.mp3 && ls
rename 's/\d+/sprintf("%02d", $&)/e' *.mp3 && ls

for f in *.jpg ; do if [[ $f =~ [0-9]+\. ]] ; then  mv $f `printf "%.5d" "${f%.*}"`.jpg  ; fi ; done
for f in *.jpg ; do if [[ $f =~ [0-9]+\. ]] ; then echo mv $f `printf "%.5d" "${f%.*}"`.jpg  ; fi ; done


#####################################################################
#
#   GIMP Photoshop-Theme
#
#####################################################################

https://www.youtube.com/watch?v=j-u8y8YXJXM
https://www.chip.de/news/GIMP-in-Photoshop-verwandeln-Ein-kostenloses-Theme-Pack-machts-moeglich_98666549.html
https://imagemagick.org/script/mogrify.php
https://fotoschule.fotocommunity.de/fotos-ausrichten-how-to-drehen-und-ausrichten/
https://linux-club.de/wiki/opensuse/ImageMagick_n%C3%BCtzliche_Beispiele


#####################################################################
#
#   Replace transparency in PNG images with white background
#
#####################################################################

http://www.fmwconcepts.com/imagemagick/tidbits/image.php
https://stackoverflow.com/questions/2322750/replace-transparency-in-png-images-with-white-background
https://superuser.com/questions/1298159/imagemagick-how-to-change-images-background-color-with-anti-aliasing
https://unix.stackexchange.com/questions/228881/alpha-removal-with-imagemagick-is-bad-but-only-with-a-white-background
https://gist.github.com/MohamedAlaa/d9b54cd856b3edce1510
https://github.com/ImageMagick/ImageMagick/issues/220

convert -flatten img1.png img1-white.png
convert image.png -background white -alpha remove white.png
convert png.png -resize 500x400  -background white -flatten  png_small.jpg
convert foo.pdf -background "#FFFFFF" -flatten foo.jpg

convert -density 750 -alpha remove -alpha off a.pdf a.png
convert -density 100 -alpha remove -alpha off a.pdf 90-white.png
convert -density 300 -alpha remove -alpha off a.pdf png24:300-white-24.png

convert fox.jpg ( -clone 0 -fuzz 11% -transparent white -blur 0x1 ) -compose copy_opacity -composite fox_transparent_fuzzed_blurry_mask.png

convert fox.jpg -type Grayscale -negate -fill white -fuzz 11% +opaque "#000000" -blur 0x1 fox_blur_mask.jpg
convert fox.jpg fox_blur_mask.jpg -compose copy_opacity -composite fox_transparent_blur_mask_result.png

convert fox.jpg -bordercolor white -border 1x1 -fuzz 11% -fill none -floodfill +0+0 white -shave 1x1 fox_flood_2_minimal.png

*
*
*

Remove white background color of an image in ImageMagick
$ convert  your.jpg  -transparent white  your.png

Flatten a transparent image with a white background:
convert -flatten img1.png img1-white.png

Make an image transparent
convert -transparent '#FFFFFF' nontransparent.gif transparent.png
convert an image into tiles
convert -size 3200x3200 tile:single_tile.png final.png

making a montage from a collection of images
montage -geometry +0+0 -background transparent *png montage.png

inverting colors
convert before.png -negate after.png

generating a favicon
convert large_image.png -resize 16x16! favicon.ico

Resize keep aspect ratio
convert input.jpg -resize 250x90 output.jpg

Resize keep minimum image size
convert input.jpg -resize '250x90^' output.jpg

Clone
This code reads in the image, copys it with +clone, resizes and saves it. Then resizes and saves the next size. The part of the code within the ( ) has no effect on any of the other part of the code.

convert input.jpg \( +clone -resize 600x600 -write first_save.jpg +delete \) -resize 60x60 thumbnail.jpg
Speed up jpg resize
Defining the size of the jpg when loading it will speed up the resizing process. This is done by adding the -size option.

convert -define jpeg:size=250x90 input.jpg -resize 250x90 output.jpg
adding numbers to a tiled image
I also once needed to add numbers to a individual parts of a tiled image. I found it easier to script this with Ruby rather than use the shell's looping constructs:

cmd = (0..324).to_a.inject([]) do |cmd,n|
  y=(n/25*32)+15; x=((n%25)*32)+15
  cmd << "-draw 'fill red text #{x},#{y} \"#{n}\"'"
end

convert img.png #{cmd.join(' ')} annotated_img.png

---

gs -q -dQUIET -dSAFER -dBATCH -dNOPAUSE -dNOPROMPT -dMaxBitmap=500000000 -dAlignToPixels=0 -dGridFitTT=1 -sDEVICE=pngalpha -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -r50 -sOutputFile=test_cmyk_blue_gs-%d.png test_cmyk_blue.pdf

convert -colorspace rgb -verbose test_cmyk_blue.pdf i:\test.pn
convert -background "#FF0000" test_rgb.pdf -flatten testrgb.png
convert test_rgb.pdf -background "#FF0000" -flatten testrgb.png




#####################################################################
#
#   Timing with cURL
#   https://blog.cloudflare.com/a-question-of-timing/amp/
#   https://ma.ttias.be/server-timings-chrome-devtools/
#
#####################################################################

$ cat .curlrc
-w "dnslookup: %{time_namelookup} | connect: %{time_connect} | appconnect: %{time_appconnect} | pretransfer: %{time_pretransfer} | starttransfer: %{time_starttransfer} | total: %{time_total} | size: %{size_download}\n"

$ curl -so /dev/null https://www.zasag.mn
dnslookup: 1.510 | connect: 1.757 | appconnect: 2.256 | pretransfer: 2.259 |
starttransfer: 2.506 | total: 3.001 | size: 53107









#####################################################################

lynx hotnews.ro -accept_all_cookies  -justify


https://medium.com/carousell-insider/how-we-made-carousells-mobile-web-experience-3x-faster-bbb3be93e006

https://openlinkprofiler.org/domains/mediamarkt.de
https://firebearstudio.com/blog/magento-2-enterprise-edition-features.html
https://bsscommerce.com/blog/magento-2-community-vs-enterprise-edition-comparison/
https://amasty.com/knowledge-base/magento-2-ce-vs-ee.html

i5-7200U Prozessor  SSD
https://www.saturn.de/de/product/_hp-250-g6-2484055.html
https://www.saturn.de/de/product/_dell-inspiron-15-3567-2441610.html
https://www.saturn.de/de/product/_hp-14-bp034ng-2431961.html
https://www.saturn.de/de/product/_trekstor-primebook-p14b-2368916.html
https://www.saturn.de/de/product/_trekstor-primebook-p14b-2368922.html
https://www.saturn.de/de/product/_trekstor-primebook-p14b-2368917.html

























#####################################################################
#
#   zsh
#
#####################################################################

https://gist.github.com/renshuki/3cf3de6e7f00fa7e744a

sudo apt-get install curl git -y
sudo apt-get install zsh -y
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"






#####################################################################
#
#   scikit tensorflow pytorch
#
#####################################################################

https://github.com/facebookresearch/Horizon
https://docs.scipy.org/doc/numpy/user/quickstart.html#simple-array-operations
https://pandas.pydata.org/pandas-docs/stable/visualization.html
https://pandas.pydata.org/pandas-docs/stable/dsintro.html
https://docs.scipy.org/doc/numpy/user/quickstart.html

http://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_assumptions.html#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py
http://scikit-learn.org/stable/auto_examples/cluster/plot_cluster_iris.html#sphx-glr-auto-examples-cluster-plot-cluster-iris-py
http://scikit-learn.org/stable/auto_examples/datasets/plot_iris_dataset.html#sphx-glr-auto-examples-datasets-plot-iris-dataset-py
http://scikit-learn.org/stable/auto_examples/datasets/plot_random_dataset.html#sphx-glr-auto-examples-datasets-plot-random-dataset-py
http://scikit-learn.org/stable/auto_examples/decomposition/plot_incremental_pca.html#sphx-glr-auto-examples-decomposition-plot-incremental-pca-py
http://scikit-learn.org/stable/auto_examples/ensemble/plot_forest_importances.html#sphx-glr-auto-examples-ensemble-plot-forest-importances-py
http://scikit-learn.org/stable/auto_examples/ensemble/plot_gradient_boosting_regression.html#sphx-glr-auto-examples-ensemble-plot-gradient-boosting-regression-py
http://scikit-learn.org/stable/auto_examples/feature_selection/plot_rfe_digits.html#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py
http://scikit-learn.org/stable/auto_examples/model_selection/plot_cv_predict.html#sphx-glr-auto-examples-model-selection-plot-cv-predict-py
http://scikit-learn.org/stable/auto_examples/model_selection/plot_confusion_matrix.html#sphx-glr-auto-examples-model-selection-plot-confusion-matrix-py
http://scikit-learn.org/stable/auto_examples/neighbors/plot_classification.html#sphx-glr-auto-examples-neighbors-plot-classification-py
http://scikit-learn.org/stable/auto_examples/neighbors/plot_nearest_centroid.html#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py
http://scikit-learn.org/stable/auto_examples/neural_networks/plot_rbm_logistic_classification.html
http://scikit-learn.org/stable/auto_examples/semi_supervised/plot_label_propagation_digits_active_learning.html
http://scikit-learn.org/stable/auto_examples/svm/plot_custom_kernel.html
http://scikit-learn.org/stable/_downloads/plot_pca_iris.py
http://scikit-learn.org/stable/auto_examples/decomposition/plot_pca_iris.html
http://scikit-learn.org/stable/auto_examples/classification/plot_digits_classification.html
http://scikit-learn.sourceforge.net/0.7/_downloads/plot_digits_classification.py
https://github.com/scikit-learn/scikit-learn/blob/master/examples/classification/plot_digits_classification.py
http://scikit-learn.org/stable/auto_examples/linear_model/plot_ols.html
http://scikit-learn.org/stable/_downloads/plot_ols.py
http://scikit-learn.org/stable/auto_examples/linear_model/plot_ols.html




sudo apt install python-pip
sudo apt install python-tk
pip install sklearn
pip install matplotlib

sudo apt install kate
sudo apt-get install konsole





https://www.tensorflow.org/
https://www.tensorflow.org/tutorials/
https://www.tensorflow.org/tutorials/keras/basic_classification
https://www.tensorflow.org/tutorials/keras/basic_text_classification
https://www.tensorflow.org/tutorials/keras/basic_regression
https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html
https://pytorch.org/tutorials/beginner/pytorch_with_examples.html
https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html
https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py
https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/contrib/eager/python/examples/pix2pix/pix2pix_eager.ipynb
https://github.com/tensorflow/models/blob/master/research/nst_blogpost/4_Neural_Style_Transfer_with_Eager_Execution.ipynb
https://www.tensorflow.org/tutorials/images/image_recognition
https://www.tensorflow.org/hub/tutorials/image_retraining
https://github.com/tensorflow/models/blob/master/samples/outreach/blogs/segmentation_blogpost/image_segmentation.ipynb
https://www.tensorflow.org/tutorials/sequences/text_generation
https://www.tensorflow.org/tutorials/sequences/audio_recognition



https://keras.io/
https://pytorch.org/
https://developers.google.com/ml-kit/
https://caffe2.ai/
https://caffe2.ai/docs/tutorials
http://deeplearning.net/software/theano/
http://deeplearning.net/software/theano/tutorial/index.html#tutorial
http://deeplearning.net/software/theano/tutorial/examples.html#brief-example
https://kur.deepgram.com/
https://kur.deepgram.com/quick_start_examples.html#quick-examples
https://www.mlflow.org/
https://www.mlflow.org/docs/latest/index.html

http://www.erogol.com/broad-view-machine-learning-libraries/
http://www.nltk.org/
https://github.com/lisa-lab/pylearn2
http://deeplearning.net/software/pylearn2/
https://github.com/IDSIA/brainstorm


http://pybrain.org/
http://pybrain.org/docs/#tutorials
http://pybrain.org/docs/tutorial/fnn.html
https://pythonhosted.org/milk/
https://pythonhosted.org/milk/supervised.html#example
https://pythonhosted.org/milk/clustering.html#k-means
https://pythonhosted.org/milk/randomforests.html
https://pythonhosted.org/milk/api.html#example

http://montepython.sourceforge.net/
http://montepython.sourceforge.net/#example
http://shogun-toolbox.org/install
https://www.cs.waikato.ac.nz/ml/weka/
http://shogun-toolbox.org/examples/latest/index.html
http://shogun-toolbox.org/examples/latest/examples/multiclass_classifier/random_forest.html
https://github.com/erogol/Random_Forests
sudo apt-get install weka




















##############################################################
#
#	GIT MERGE OPTIONS
#
##############################################################

usage: git merge [options] [<commit>...]
   or: git merge [options] <msg> HEAD <commit>
   or: git merge --abort

    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --summary             (synonym to --stat)
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    -e, --edit            edit message before committing
    --ff                  allow fast-forward (default)
    --ff-only             abort if fast-forward is not possible
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --verify-signatures   Verify that the named commit has a valid GPG signature
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -m, --message <message>
                          merge commit message (for a non-fast-forward merge)
    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --abort               abort the current in-progress merge
    --progress            force progress reporting
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --overwrite-ignore    update ignored files (default)

##############################################################
#
#	BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding
#
##############################################################
https://arxiv.org/pdf/1810.04805.pdf
https://arxiv.org/abs/1810.04805
https://github.com/google-research/bert
https://colab.research.google.com/github/tensorflow/tpu/blob/master/tools/colab/bert_finetuning_with_cloud_tpus.ipynb
https://ai.googleblog.com/2018/11/open-sourcing-bert-state-of-art-pre.html
https://www.heise.de/developer/meldung/Natural-Language-Processing-Google-veroeffentlicht-Modell-fuer-Pre-Training-4211010.html


##############################################################

For checkbox status Use jQuery's is() function:

##############################################################

if($("#isAgeSelected").is(':checked'))
    $("#txtAge").show();  // checked
else
    $("#txtAge").hide();  // unchecked



##############################################################
#
#	Machine Learning
#	https://github.com/data-science-workshops/machine-learning-workflow
#	https://github.com/data-science-workshops/machine-learning-101
#
##############################################################

Machine Learning Workflow

	Workflow
	Raw Data Collection
	Pre-Processing
	Sampling
	Model Training
	Model Evaluation
	Hyperparameter Optimization
	Deployment

Agenda

	Einführung Machine Learning
	Machine Learning Workflow
	Raw Data Collection
	Pre-Processing
	Sampling
	Model Training
	Model Evaluation
	Hyperparameter Optimization
	Deployment
------------------------------------------------


https://gql.foundation/
https://vmware.github.io/concord-bft/
https://github.com/vmware/concord-bft
https://blogs.vmware.com/opensource/2018/08/28/meet-project-concord/
https://ethereum.github.io/yellowpaper/paper.pdf
https://t3n.de/news/harley-davidson-livewire-erstes-elektromotorrad-1123345/
https://www.heise.de/security/meldung/Vorsicht-Neue-betruegerische-Bewerbungsmail-mit-Erpressungstrojaner-im-Umlauf-4214191.html












