Making predictions
https://weka.wikispaces.com/Making+predictions

java weka.classifiers.trees.J48 -T unclassified.arff -l j48.model -p 0

------------------------------------------------------------------------------------------------------------------

R Examples Repository Multivariate multiple regression
http://www.uni-kiel.de/psychologie/rexrepos/posts/multRegression.html

http://www.cs.umb.edu/~ding/history/480_697_spring_2013/homework/WekaTest.java

------------------------------------------------------------------------------------------------------------------

http://www.programcreek.com/java-api-examples/index.php?api=weka.classifiers.evaluation.output.prediction.AbstractOutput
http://www.programcreek.com/java-api-examples/index.php?source_dir=sad-analyzer-master/SADAnalyzer/edu.isistan.daclassifier/weka-src/src/main/java/weka/classifiers/Evaluation.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=Weka-for-Android-master/src/weka/classifiers/Evaluation.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=weka-master/weka/src/main/java/weka/gui/explorer/ClassifierPanel.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=collective-classification-weka-package-master/src/main/java/weka/gui/explorer/CollectiveClassifierPanel.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=extweka-master/weka-3-7-1/weka/classifiers/Evaluation.java
http://www.programcreek.com/java-api-examples/index.php?source_dir=TimeSeriesClassification-master/TimeSeriesClassification/src/weka/classifiers/evaluation/Evaluation.java

------------------------------------------------------------------------------------------------------------------

MEKA: A Multi-label Extension to WEKA
http://meka.sourceforge.net/

------------------------------------------------------------------------------------------------------------------

Final Project: Predict disease classes using genetic microarray data
http://www.kdnuggets.com/data_mining_course/assignments/final-project.html

java weka.classifiers.Classifier -t train_data.arff -T test.data.arff -p 0
java weka.classifiers.IB1 -t train_file.arff -T test_file.arff -p 0

------------------------------------------------------------------------------------------------------------------

python-weka-wrapper 0.3.10 documentation
https://pypi.python.org/pypi/python-weka-wrapper
http://pythonhosted.org/python-weka-wrapper/examples.html

------------------------------------------------------------------------------------------------------------------

8 Proven Ways for improving the “Accuracy” of a Machine Learning Model
https://www.analyticsvidhya.com/blog/2015/12/improve-machine-learning-results/

------------------------------------------------------------------------------------------------------------------

https://svn.cms.waikato.ac.nz/svn/weka/trunk/wekaexamples/src/main/java/wekaexamples/classifiers/IncrementalClassifier.java
https://weka.wikispaces.com/Use+WEKA+in+your+Java+code
https://jaxenter.de/machine-learning-mit-weka-alles-begann-als-java-noch-in-kinderschuhen-steckte-46131

*
*
* Example
*
*

package wekaexamples.classifiers;

import weka.classifiers.bayes.NaiveBayesUpdateable;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.ArffLoader;

import java.io.File;

/**
 * This example trains NaiveBayes incrementally on data obtained
 * from the ArffLoader.
 *
 * @author FracPete (fracpete at waikato dot ac dot nz)
 * @version $Revision$
 */
public class IncrementalClassifier {

  /**
   * Expects an ARFF file as first argument (class attribute is assumed
   * to be the last attribute).
   *
   * @param args        the commandline arguments
   * @throws Exception  if something goes wrong
   */
  public static void main(String[] args) throws Exception {
    // load data
    ArffLoader loader = new ArffLoader();
    loader.setFile(new File(args[0]));
    Instances structure = loader.getStructure();
    structure.setClassIndex(structure.numAttributes() - 1);

    // train NaiveBayes
    NaiveBayesUpdateable nb = new NaiveBayesUpdateable();
    nb.buildClassifier(structure);
    Instance current;
    while ((current = loader.getNextInstance(structure)) != null)
      nb.updateClassifier(current);

    // output generated model
    System.out.println(nb);
  }
}
