

http://www.bogotobogo.com/python/scikit-learn/scikit-learn_install.php


sudo dpkg --configure -a

---------------------------------------------------------------------------

http://scikit-learn.org/stable/developers/advanced_installation.html

pip install -U numpy scipy scikit-learn

sudo apt-get install build-essential python-dev python-setuptools \
                     python-numpy python-scipy \
                     libatlas-dev libatlas3gf-base

If you have Python 3:

sudo apt-get install build-essential python3-dev python3-setuptools \
                     python3-numpy python3-scipy \
                     libatlas-dev libatlas3gf-base

sudo apt-get install python-matplotlib

---------------------------------------------------------------------------

sudo apt-get install build-essential python-dev python-numpy \
python-setuptools python-scipy libatlas-dev libatlas3-base

sudo apt-get install python-matplotlib
sudo apt install python-pip
pip install -U scikit-learn
#easy_install -U scikit-learn

# test
sudo apt-get install python-nose
nosetests sklearn --exe

# tutorials
git clone https://github.com/astroML/sklearn_tutorial

$ cd $TUTORIAL_HOME/data/sdss_colors
$ python fetch_data.py

$ cd $TUTORIAL_HOME/data/sdss_photoz
$ python fetch_data.py

$ cd $TUTORIAL_HOME/data/sdss_spectra
$ python fetch_data.py


--------------------------------------------------------------------

# http://machinelearningmastery.com/a-gentle-introduction-to-scikit-learn-a-python-machine-learning-library/

# Sample Decision Tree Classifier
from sklearn import datasets
from sklearn import metrics
from sklearn.tree import DecisionTreeClassifier
# load the iris datasets
dataset = datasets.load_iris()
# fit a CART model to the data
model = DecisionTreeClassifier()
model.fit(dataset.data, dataset.target)
print(model)
# make predictions
expected = dataset.target
predicted = model.predict(dataset.data)
# summarize the fit of the model
print(metrics.classification_report(expected, predicted))
print(metrics.confusion_matrix(expected, predicted))