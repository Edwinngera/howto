##############################################################
#
# Extract plate von video - todo
#
##############################################################

Steps

download video -> youtube-dl
convert 2 png -> ffmpeg - resize
detect car in png -> yolo3 tf
detect plate in car pngs -> openalpr
export list


https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/#0
https://www.tensorflow.org/hub/tutorials/image_retraining
https://www.tensorflow.org/tutorials/images/image_recognition#usage_with_python_api
https://github.com/tensorflow
https://pypi.org/project/yolo34py/
https://mc.ai/yolo3-a-huge-improvement/
https://pjreddie.com/darknet/yolo/
https://github.com/openalpr/openalpr
https://github.com/tensorflow/models/blob/master/tutorials/image/imagenet/classify_image.py
https://github.com/tensorflow/models/blob/master/research/nst_blogpost/4_Neural_Style_Transfer_with_Eager_Execution.ipynb
https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/contrib/eager/python/examples/pix2pix/pix2pix_eager.ipynb

--------------------------

https://www.youtube.com/watch?v=QfNvhPx5Px8
https://gist.github.com/jkjung-avt/790a1410b91c170187f8dbdb8cc698c8

https://www.networkcameracritic.com/?p=2177
https://www.computerhope.com/unix/ufgrep.htm
https://medium.com/@ryanfb/how-i-failed-to-replicate-an-86-million-project-in-1-line-of-code-615048a1f9d0
https://medium.freecodecamp.org/how-i-replicated-an-86-million-project-in-57-lines-of-code-277031330ee9
https://www.youtube.com/watch?v=hrD75ebjCms

sudo apt-get update && sudo apt-get install -y openalpr openalpr-daemon openalpr-utils libopenalpr-dev

time alpr -c eu sample.jpg
time alpr -r "/usr/share/..../openalpr/runtime_data” sample.jpg
time alpr --clock -n 1 'Drive around Bendigo-hrD75ebjCms.mp4' > bendigo.txt
fgrep confidence bendigo.txt| cut -d' ' -f 6 | sort -u | shuf | head
fgrep 'confidence: 9' bendigo.txt | cut -d' ' -f 6 | sort -u