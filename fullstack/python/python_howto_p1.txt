##########################################################
#
# Python uppercase
#
##########################################################

>>> s = 'sdsd'
>>> s.upper()
'SDSD'



##########################################################
#
#   Python Resize Crop
#   http://docs.wand-py.org/en/0.4.1/guide/resizecrop.html
#
##########################################################

>>> from urllib2 import urlopen
>>> from wand.image import Image
>>> f = urlopen('http://api.twitter.com/1/users/profile_image/hongminhee')
>>> with Image(file=f) as img:
...     width = img.width
...     height = img.height
...
>>> f.close()
>>> width
48
>>> height
48


##########################################################
#
#   How to use exit
#
##########################################################

https://stackoverflow.com/questions/19747371/python-exit-commands-why-so-many-and-when-should-each-be-used/19747562
https://stackoverflow.com/questions/1187970/how-to-exit-from-python-without-traceback

Conclusion
Use exit() or quit() in the REPL.
Use sys.exit() in scripts, or raise SystemExit() if you prefer.
Use os._exit() for child processes to exit after a call to os.fork().

Footnotes
* Actually, quit() and exit() are callable instance objects, but I think it's okay to call them functions.

---------

Different Means of Exiting
os._exit():

Exit the process without calling the cleanup handlers.
exit(0):

a clean exit without any errors / problems.
exit(1):

There was some issue / error / problem and that is why the program is exiting.
sys.exit():

When the system and python shuts down; it means less memory is being used after the program is run.
quit():

Closes the python file.

---------------

import sys, traceback

def main():
    try:
        do main program stuff here
        ....
    except KeyboardInterrupt:
        print "Shutdown requested...exiting"
    except Exception:
        traceback.print_exc(file=sys.stdout)
    sys.exit(0)

if __name__ == "__main__":
    main()

import sys

try:
    sys.exit(1) # Or something that calls sys.exit()
except SystemExit as e:
    sys.exit(e)
except:
    # Cleanup and reraise. This will print a backtrace.
    # (Insert your cleanup code here.)
    raise



