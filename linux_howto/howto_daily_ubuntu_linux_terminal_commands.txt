
###############################
## Daily Commands Ubuntu
###############################

cd  /somefolder						# go to folder
mkdir /somefolder                   # create folder
touch /somefile

cp -r /somefolder/* /newfolder				# copy to folder
mv /home/user/my_static /home/user/static		# rename or move files

sudo ln -s /home/user/realpath/  /opt/some/htdocs/  	# make symlinks

chown name:name -R /somefolder
chmod +xrw -R /somefolder

sudo truncate -s 0 filename     # clean content from big files


#########################
## Disk Status and clean:
#########################

ls -lta				# print list view folder
ls -lrt

df -h				# print hdd space
du -s -h *
du -h --max-depth=1 # print hdd space 1 level deep
sudo find / -name "somefile"	# search file

sudo find /opt -type f -size +300000k -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'	# get big files
sudo find /opt -type f -size +500M -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'
sudo find / -name '*' -size +1G

sudo find /home/user/Downloads/ -type f -iname "*.txt" -exec grep -H 'String' {} +	# search test in files
sudo find /home/user -type f -iname "*.txt" -exec grep -i "String" {} +

sudo sh someinstalelr.sh	# start some app
sudo ./someinstalelr.run	# start some app

sudo apt-get install someapp	# install app
sudo apt-get remove someapp	# remove app
sudo apt-get purge someapp	# purge app

sudo service someapp start	# start service
sudo service someapp stop	# stop service
sudo service someapp restart	# restart service

sudo /opt/lampp/xampp restart	# restart xampp

# see all services
service < option >  --status-all |  --full-restart

#########################
## ppa apt-get management
#########################

man apt-get

# remove packages that were automatically installed to satisfy dependencies
# for some package and that are no more needed.
sudo apt-get autoremove

# --fix-broken
sudo apt-get install -f

# if dpkg was interrupted
sudo dpkg --configure -a

# Update packages
sudo apt-get update && sudo apt-get upgrade

# Remove App software
sudo apt-get remove wolfram-engine
sudo apt-get remove --purge wolfram*

---------------------------------------------------

# Add some Repos
sudo add-apt-repository ppa:someppa/ppa
sudo add-apt-repository ppa:webupd8team/gnome3
sudo apt-get update

# Remove some Repos
sudo add-apt-repository --remove ppa:someppa/ppa
sudo add-apt-repository --remove ppa:webupd8team/gnome3

# Purge Repos
sudo apt-get install ppa-purge
sudo ppa-purge ppa:someppa/ppa
sudo ppa-purge ppa:unity-team/staging

# http://www.webupd8.org/2012/02/how-to-use-launchpad-ppa-add-remove.html

#########################
## mysql management terminal
#########################

# mysql connect with socket in terminal:
sudo mysql --user=root  --socket=/opt/lampp/var/mysql/mysql.sock --password= --default-character-set=utf8
sudo mysql -u root --socket=/opt/lampp/var/mysql/mysql.sock -p

# update mysql password
mysql -u root -p
use mysql;
update user set password=PASSWORD('your_new_password') where User='root';
flush privileges;
quit

# mysql usual commands
mysql> SHOW DATABASES;
mysql> CREATE DATABASE x;
mysql> DROP DATABASE x;
mysql> TRUNCATE TABLE x;
mysql> USE `x`;

----------------------------------------------------

Import Classic Console Terminal:
mysql> create DATABASE_NAME;
#mysql> use DATABASE_NAME;
mysql> connect DATABASE;
mysql> source file.sql;

------------------------------

Import:
mysql -u root -p dbname < table1.sql  #everything
mysql -u root -p --socket=/opt/lampp/var/mysql/mysql.sock dbname < table1.sql #just a table using socket
mysql -u root -p -D dbname < tableName.sql #just a table

Export:
mysqldump -u root -p  dbname > tableName.sql #everything
mysqldump -u root -p  dbname tableName > tableName.sql #just a table
mysqldump -u root -p --socket=/opt/lampp/var/mysql/mysql.sock dbname tableName > tableName.sql #just a table using socket
mysqldump -u root -p --socket=/opt/lampp/var/mysql/mysql.sock dbname > dbname.sql

mysqldum -u root -p dbname \
  --ignore-table=schema.tablename1    \
  --ignore-table=schema.tablename2    \
  --ignore-table=schema.tablename3 > mysqldump.sql

---------------------------
----  Import csv into mysql
---------------------------
mysql -u root -p --local-infile DatabaseName
LOAD DATA LOCAL INFILE 'file.csv' INTO TABLE TableName FIELDS TERMINATED BY '^' LINES TERMINATED BY '\n';

Export as postgresql;
mysqldump --compatible=postgresql -u root -p  DatabaseName TableName > TableName.sql

Options Import:
mysqlimport --fields-optionally-enclosed-by="\"" --fields-terminated-by=, --lines-terminated-by="\r\n" --user=root --password YOUR_TABLE YOUR_TABLE.csv
mysqlimport --ignore-lines=1 --columns='head -n 1 YOUR_TABLE.csv' --ignore-lines=1 YOUR_TABLE YOUR_TABLE.csv

---------------------------
----  Export DB Table into csv
---------------------------

#mysql> use DBName; mysql> SET autocommit=0 ; source the_sql_file.sql ; COMMIT ;

Export CSV directly from MySQL

mysql -u root -p
mysql> use DBName;
mysql> SHOW TABLES;

mysql> SELECT * INTO OUTFILE 'export.csv' FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"' ESCAPED BY '\\' LINES TERMINATED BY '\n' FROM DBTable WHERE 1 LIMIT 10;
mysql> SELECT * INTO OUTFILE 'export.csv' FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"' LINES TERMINATED BY '\n' FROM DBTable WHERE 1 LIMIT 10;

mysql> SELECT  orderNumber, status, orderDate, requiredDate, comments FROM  orders
WHERE  status = 'Cancelled' INTO OUTFILE 'C:/tmp/cancelled_orders.csv' FIELDS ENCLOSED BY '"' TERMINATED BY ';' ESCAPED BY '"' LINES TERMINATED BY '\r\n';

https://ariejan.net/2008/11/27/export-csv-directly-from-mysql/
http://www.mysqltutorial.org/mysql-export-table-to-csv/

-----------------------------------------------

#################################
# update linux password
#################################

sudo passwd user    # some user
sudo passwd         # current user

sudo -i     # as root
su          # as root
sudo -u     # masquerade

sudo reboot         # reboot
sudo shutdown -r    # reboot

# backups dumps
mysqldump --all-databases --single-transaction --user=root --pass > all_databases.sql
mysqldump --all-databases --single-transaction --set-gtid-purged=OFF --user=root --pass > all_databases.sql
mysql -uroot -p < partial_database_backup.sql


######################################################
####
#### Clean ibdata1 file - because is to big
#### DO BACKUP FROM ALL DB'S BOFORE THIS STEP!!!!!!!!
#### SHOW DATABASES
#### https://mariadb.atlassian.net/browse/MDEV-8421
#### https://bugs.mysql.com/bug.php?id=1341
####
####
######################################################

sudo /opt/lampp/xampp stop
sudo rm -rf /opt/lampp/var/mysql/ibdata1
sudo find / -name "ibdata1"
#/opt/lampp/var/mysql/ibdata1
#/var/lib/mysql/ibdata1
sudo cp /var/lib/mysql/ibdata1 /opt/lampp/var/mysql/
sudo /opt/lampp/xampp start

# check config
sudo nano /opt/lampp/etc/my.cnf

[client]
port            = 3306
socket          = /opt/lampp/var/mysql/mysql.sock

# The MySQL server
[mysqld]
user            = nobody
port            = 3306
socket          = /opt/lampp/var/mysql/mysql.sock

# Set rights for folders & files
sudo chmod -R 755 /opt/lampp/
sudo chown -R root:root /opt/lampp/mysql/

#sudo chown nobody:nogroup ibdata1
#sudo chmod -R 0777 ibdata1
sudo chmod -R 0777 /opt/lampp/var/mysql/  #fix rwx

# Restart lampp
sudo /opt/lampp/xampp restart

# Check Processes
pgrep mysql
pgrep mysql | wc -l
pgrep -l mysql

# when not connect with sock
sudo nano /opt/lampp/etc/my.cnf # max_allowed_packet=100M + socket  = /opt/lampp/var/mysql/mysql.sock
sudo chmod 777 -R /opt/lampp
sudo chmod 755 -R /opt/lampp/
/opt/lampp/sbin/mysqld --user=nobody

Fix: Warning: World-writable config file '/opt/lampp/etc/my.cnf' is ignored
sudo chmod 0644 /opt/lampp/etc/my.cnf

######################################################
#
# DROP DATABASE `xxx910`
# Error Code: 1008. Can't drop database 'xxx910'; database doesn't exist
#
######################################################

show variables where Variable_name ='datadir';
+---------------+-----------------------+
| Variable_name | Value                 |
+---------------+-----------------------+
| datadir       | /opt/lampp/var/mysql/ |
+---------------+-----------------------+
1 row in set (0,00 sec)


sudo /opt/lampp/xampp stop
cd /opt/lampp/var/mysql/
rm -rf xxx910
sudo /opt/lampp/xampp start

---------------------------------

#1304 - PROCEDURE _hierarchy already exists

*** Delete Procedure

--------------------------------


###########################
### vpn tunnel
###########################

sudo vpnc custom_conn.conf  # start vpn connection
sudo vpnc-disconnect        # end vpn connection

sudo gedit somefile.ini		# edit file with gedit
sudo nano somefile.ini		# edit file with nano

###########################
### crontab crons
###########################

sudo /opt/lampp/xampp stop

crontab -e
crontab -l

crontab: usage error: unrecognized option
usage:	crontab [-u user] file
	crontab [ -u user ] [ -i ] { -e | -l | -r }
		(default operation is replace, per 1003.2)
	-e	(edit user's crontab)
	-l	(list user's crontab)
	-r	(delete user's crontab)
	-i	(prompt before deleting user's crontab)

# every 10 minutes
*/10 * * * * /opt/lampp/bin/php /opt/lampp/htdocs/YourPathToSugar/cron.php > /dev/null 2>&1
*/30 * * * * /opt/lampp/bin/php /opt/lampp/htdocs/YourPathToSugar/Proj/cron.php > /dev/null 2>&1

#*/5 * * * * php -q /opt/lampp/htdocs/YourPathToSugar/Proj/cron.php > /dev/null 2>&1
#*/10 * * * * php -f /opt/lampp/htdocs/YourPathToSugar/Proj/cron.php > /dev/null 2>&1
#*/2 * * * *   cd /home/user/YourPathToSugar/Proj; php -f cron.php > /dev/null 2>&1


/opt/lampp/bin/php -c /etc/php5/cli/php.ini  -f install_cli.php -- -c -t
/opt/lampp/bin/php -c /opt/lampp/etc/php.ini   -f install_cli.php -- -c -t // alternative command without cli
php -c /opt/lampp/etc/php.ini -f cron.php > /dev/null 2>&1

sudo service cron stop
sudo service cron start
sudo service cron restart
sudo /etc/init.d/cron restart

sudo service ssh start
sudo service ssh stop

----------------------------------------------------------------------------

sudo service --status-all
sudo service virtualbox stop | sudo service mysql stop | sudo service teamviewerd stop | sudo service elasticsearch stop

*/5 * * * * php -f cron.php > /dev/null 2>&1
*/5 * * * * php -c /opt/lampp/etc/php.ini  -f cron.php > /dev/null 2>&1
*/5 * * * * php -c /etc/php5/cli/php.ini -f cron.php > /dev/null 2>&1
* * * * *  cd /home/user/PhpstormProjects/PRJ; php -f cron.php > /dev/null 2>&1

----------------------------------------------------------------------------

sudo chown -R "www-data:www-data" /home/user/Projects/
sudo chmod -R g+rw /opt/lampp/htdocs

#apache configs
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=www-data

ls -l /home/

sudo service elasticsearch stop
sudo service elasticsearch start

sh /opt/PhpStorm-141.2462/bin/phpstorm.sh

sudo truncate -s0 access_log
sudo truncate -s0 error_log
tail -n 5 -q php_error_log

######################################
#
# Replace & Rename
#
######################################

Replace string in files ( Jay Daniels writershorde.wordpress.com):
grep -rl '<' ./ | xargs sed -i 's/</<\/html>/g'

Rename multiple files in current directory and all subdirectories( Jay Daniels writershorde.wordpress.com):
find . -iname "*.html" -exec rename 's/\.html$/.htm/' *.html {} \;

######################################
#
# Take Screen Shot Ubuntu
#
######################################

gnome-screenshot -w  		# selected screen
gnome-screenshot		# complete screen
gnome-screenshot -w -d 2 	# selected screen with dalay 2 secs
gnome-screenshot -a		# Capture a Particular Area
gnome-screenshot -w -b		# Take Screenshot Including or Excluding Window Border
gnome-screenshot -w -B

