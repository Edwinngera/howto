##########################################################################
##
##	How To Install Linux On A MacBook Pro Retina
##	http://www.makeuseof.com/tag/install-linux-macbook-pro/
##
##########################################################################

Download Ubuntu
Write to USB Drive
Resize Partitions
Boot Up Ubuntu Image
EFI Boot Fix

When the installer completes, don’t restart just yet!
We still need to do one more thing so that we’ll be able to use GRUB.
Run the following command: sudo apt-get install efibootmgr.
This will temporarily install a configuration tool for EFI boot setups. Next, run sudo efibootmgr.
This will print out the current boot configuration to your screen.
In this, you should be able to see “ubuntu” and “Boot0000*”. Currently, the EFI system will point to Boot0080*,
which skips GRUB and goes directly to Mac OS X. To fix this, run the command sudo efibootmgr -o 0,80.
Now you can restart!



Various Tweaks

First, you’ll need to make a quick change to a GRUB setting so that the SSD won’t occasionally freeze.
Type sudo nano /etc/default/grub in a terminal, and then find the line with GRUB_CMDLINE_LINUX and change it
to GRUB_CMDLINE_LINUX="libata.force=noncq". Hit CTRL+X to save, and Y then Enter
to confirm. Then, you’ll want to type sudo nano /etc/grub.d/40_custom into the terminal,
 which will open up a new file. In it, type this exactly:

menuentry "Mac OS X" { exit }



##########################################################################
##
## Ubuntu 14.10 running on my MacBook
## https://medium.com/@PhilPlckthun/ubuntu-14-10-running-on-my-macbook-18991a697ae0
##
##########################################################################

Find your GRUB installation:
ls (hd2,gpt1)/boot/grub

Get the UUID of the drive:
grub> ls -l (hd2,gpt2)
Partition hd2,gpt2: Filesystem type ext* [...] UUID e86c20b9-83e1-447d-a3be-d1ddaad6c4c6 - Partition start at [...]

set root=(hd2,gpt2)

Boot into the system:
linux /boot/vmlinuz[tab].efi.signed root=UUID=[UUID]

Replace [UUID] with the UUID :
initrd /boot/initrd[tab]
boot

Tools to fix the EFI boot partition:
sudo add-apt-repository ppa:detly/mactel-utils

install some tools we need:
sudo apt-get update
sudo apt-get install mactel-boot hfsprogs gdisk grub-efi-amd64

mount
#/dev/sda1 on /boot/efi type vfat (rw)
sudo umount /dev/sda1
sudo gdisk /dev/sda
#Partition number (1-3): 1
#Partition number (1-128, default 1): 1


Let’s format HFS+ EFI boot partition
sudo mkfs.hfsplus /dev/sda1 -v Ubuntu


Edit the /etc/fstab file:
sudoedit /etc/fstab

Search for these two lines and delete them:
# /boot/efi was on /dev/sda1 during installation
UUID=C59D-1B30  /boot/efi       vfat    defaults        0       1
Exit with “ctrl-x” and press “y” to save.

Now we need to replace the line you deleted with our new partition:
sudo bash -c 'echo UUID=$(blkid -o value -s UUID /dev/sda1) /boot/efi auto defaults 0 0 >> /etc/fstab'

Remount the EFI boot partition:
sudo mount /boot/efi

Reinstalling GRUB
sudo mkdir -p "/boot/efi/EFI/$(lsb_release -ds)/"
sudo bash -c 'echo "This file is required for booting" > "/boot/efi/EFI/$(lsb_release -ds)/mach_kernel"'
sudo bash -c 'echo "This file is required for booting" > /boot/efi/mach_kernel'
sudo grub-install --target x86_64-efi --boot-directory=/boot --efi-directory=/boot/efi --bootloader-id="$(lsb_release -ds)"
sudo hfs-bless "/boot/efi/EFI/$(lsb_release -ds)/System/Library/CoreServices/boot.efi"


Remove all entries, which names are not “Ubuntu 14.10”:
sudo efibootmgr -b 0000 -B
sudo efibootmgr -b 0000 -B

Set the default booting partition to “Ubuntu 14.10”, in this case:
sudo efibootmgr -o 0001


GRUB timeout

sudo touch /etc/grub.d/25_pre-os-prober
sudo touch /etc/grub.d/35_post-os-prober
sudo bash -c 'echo -e "#! /bin/sh\nset -e\n\ncat << EOF\nset timeout_bak=\${timeout}\nset timeout_style_bak=\${timeout_style}\nEOF" > /etc/grub.d/25_pre-os-prober'
sudo bash -c 'echo -e "#! /bin/sh\nset -e\n\ncat << EOF\nset timeout=\${timeout_bak}\nset timeout_style=\${timeout_style_bak}\nEOF" > /etc/grub.d/35_post-os-prober'
sudo chmod 755 /etc/grub.d/25_pre-os-prober
sudo chmod 755 /etc/grub.d/35_post-os-prober

Wi-Fi

If your Wi-Fi still doesn’t work out-of-box—which it did for me—install the driver manually:
sudo apt-get install bcmwl-kernel-source


Found out on which chipset you are by executing:

lspci -vnn | grep 14e4:
And check out here whether your chipset is supported. If it is you can install the b43 driver by executing:

sudo apt-get purge bcmwl-kernel-source broadcom-sta-common broadcom-sta-source
sudo apt-get install firmware-b43-installer

Updating the system

Just run:
sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get autoremove

Update the kernel

This is really critical! Suspending won’t work properly without an upgrade to the newest kernel.
Run this to install the 3.18 kernel:

cd /tmp/
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.18-vivid/linux-headers-3.18.0-031800-generic_3.18.0-031800.201412071935_amd64.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.18-vivid/linux-headers-3.18.0-031800_3.18.0-031800.201412071935_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.18-vivid/linux-image-3.18.0-031800-generic_3.18.0-031800.201412071935_amd64.deb
sudo dpkg -i linux-headers-3.18.0-*.deb linux-image-3.18.0-*.deb

Fixing the touchpad

Ubuntu’s default configuration for the touchpad is unusable! Run this to get it configured more like OS X’s, including natural scrolling:

gsettings set org.gnome.settings-daemon.plugins.mouse active false
sudo apt-get install xserver-xorg-input-mtrack
sudo apt-get autoremove xserver-xorg-input-synaptics
sudo rm /usr/share/X11/xorg.conf.d/50-synaptics.conf

Now create and edit the xorg.conf file:

sudo nano /etc/X11/xorg.conf
Paste the following:

Section "InputClass"
 MatchIsTouchpad "on"
 Identifier "Touchpads"
 Driver "mtrack"
 Option "IgnoreThumb" "true"
 Option "IgnorePalm" "true"
 Option "DisableOnPalm" "true"
 Option "BottomEdge" "30"
 Option "TapDragEnable" "false"
 Option "Sensitivity" "1.2"
 Option "ButtonEnable" "true"
 Option "ButtonIntegrated" "true"
 Option "ClickFinger1" "1"
 Option "ClickFinger2" "3"
 Option "TapButton1" "0"
 Option "TapButton2" "0"
 Option "TapButton3" "0"
 Option "TapButton4" "0"
EndSection


Fixing a Marvell SSD bug

Open the said script:

sudo nano /usr/lib/pm-utils/power.d/sata_alpm
And replace the following line:

false) set_sata_alpm max_performance;;
With this one:

false) set_sata_alpm min_power;;


Fixing sensors, fans and the ambient light sensor

Edit the “/etc/modules” file:

sudo nano /etc/modules
And add the following two lines:

coretemp
applesmc

 install Git and essential tools for building, and set up our build directory:

sudo apt-get install git build-essential
sudo mkdir /usr/local/src
sudo chmod -R 755 /usr/local/src
sudo chown -R $USER:$USER /usr/local/src


##########################################################################
##
##	https://help.ubuntu.com/community/MacBookPro11-1/utopic
##
##########################################################################

1. EFI BOOT

sudo apt-get install efibootmgr
sudo efibootmgr
sudo efibootmgr -o 0000,0080

2. Grub tuning

By default grub is in hidden mode which we are going to change

sudo nano /etc/default/grub
Comment out every line that starts with GRUB HIDDEN

#GRUB_HIDDEN_TIMEOUT=0
#GRUB_HIDDEN_TIMEOUT_QUIET=true
and change GRUB_CMDLINE_LINUX="" to

GRUB_CMDLINE_LINUX="libata.force=noncq"
This seems to prevent occasional freezes caused by the SSD. Change anything else you'd like to have different and save. Then update grub.

sudo update-grub



3. Setting up Internet connectivity
sudo apt-get update
sudo apt-get install bcmwl-kernel-source

4. System upgrade Time for a system upgrade
sudo apt-get dist-upgrade


5. Setting up Power Management
For better battery life and power management we're going to install powertop and TLP.

Install powertop
sudo apt-get install powertop
sudo powertop --calibrate

Make sure powertop with --auto-tune is executed during startup
sudo nano /etc/rc.local
powertop --auto-tune

Install tlp
sudo add-apt-repository ppa:linrunner/tlp
sudo apt-get update
sudo apt-get install tlp
sudo tlp start

