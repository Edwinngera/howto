
https://wiki.manjaro.org/index.php?title=Pacman_Tips#Installing_Packages

########################
# Sync
########################

Ranking mirrors

This command will rank your mirrors by speed and will filter the out of date mirrors.
pacman-mirrors -g

You should sync the database after running this command by using: pacman -Syy

Optimize the database access speed
For full benefit, run this command after syncing the database.
pacman-optimize && sync

Attention: This command defragments Pacman's database, which boosts performance on slow hard drives but is harmful on SSDs. So, do not use this command on SSDs!

Syncing and Updating

Sync the database
pacman -Sy

You can force sync the database using the following command. It means, the database will be synced even if it's up to date. This is useful when you changed something repository related and want to have the changes take effect.
pacman -Syy

Updating
Pacman can update your system with only one command:
pacman -Su

Although, it is usually better to sync your repo database first:
pacman -Syu

This command was recommend:
pacman -Syyu

Update & ignore a package
The following changes take place in pacman's configuration file: /etc/pacman.conf
IgnorePkg=package_name

Update & ignore a package group
IgnoreGroup=package_group

Examples:
IgnoreGroup=gnome
IgnoreGroup=kde

########################
# install Remove
########################

It is always best to have the repo databases synchronized & then all packages installed on your system up to date before you install any new packages.
pacman -Syyu

# install package
pacman -S virtualbox

# force install package
pacman -S --force virtualbox

# Install a downloaded or a local package
pacman -U /package_path/package_name.pkg.tar.xz

# Reinstall all packages
pacman -S $(pacman -Qqen)

# Remove a package
pacman -R package_name

# Remove a package with dependencies that are not being used by other packages
pacman -Rs package_name

# Remove a package with all dependencies. Attention: The -c flag can remove needed dependencies, too. Only for advanced users.
pacman -Rsc package_name

# Remove a package and its configuration files too:
pacman -Rn package_name

# Forcefully remove a dependency without removing any other package. Attention: Only for advanced users.
pacman -Rdd package_name

########################
# Cleaning the cache
########################

# Leaves packages in your cache only for those packages which are currently installed on your system. Attention: This eliminates the possibility to Using Downgrade.
pacman -Sc

Clean cache completely and remove all packages. Attention: This eliminates the possibility to Using Downgrade.
pacman -Scc

A safer way to remove old package cache files is to remove all packages except for the latest three package versions:
paccache -rvk3

Cleaning orphan packages from the system. Also read Orphan Package Removal for further information.
pacman -Rsn $(pacman -Qdtq)

########################
# SEARCH
########################

#Provides a description of searched for package & associated packages
pacman -Ss package_name

Provides a description of previously installed package
pacman -Qs package_name

Provides detailed summary of a package
pacman -Si package_name

Modified summary:
pacman -Qi package_name

Get a list of installed packages
pacman -Q

Find out which package owns a file
pacman -Qo /file_path

List all orphan packages with no dependencies
pacman -Qdt

List all installed packages from the AUR
pacman -Qem

View package dependencies. Use one of the following commands:
pactree package_name
pactree -c package_name
pactree -s -c package_name

########################
# AUR (Arch User Repository)
########################

Following is info on three popular options for using the AUR, for a detailed list of their commands please look at their man pages:

Yaourt

Yaourt comes pre-installed with Manjaro so you normally won't have to install it. If you have removed it, this is how you install it again:
pacman -S base-devel yaourt

To use Yaourt to upgrade both official repos & AUR (only if new PKGBUILD files are available) use the following command:
yaourt -Syua

To use Yaourt to download and rebuild the latest AUR packages from their source (regardless of PKGBUILD files):
yaourt -Syua --devel

You can use all Pacman commands mentioned on this Wiki page with Yaourt, too. One command is different:
Removing orphaned packages is easier and more intuitive with Yaourt:
yaourt -Qdt

Packer

Uses some of the same commands as pacman but differs in that it checks both the official repos & AUR.
yaourt -S packer

Having installed 'packer' then you can run:
packer -S package_name

This will upgrade from both official repos & AUR:
packer -Syu



https://wiki.archlinux.org/index.php/pacman
https://wiki.archlinux.org/index.php/Pacman/Rosetta
https://wiki.archlinux.de/title/pacman



Befehl	Beschreibung
pacman -Syu	Führt eine komplette System-Aktualisierung aus
pacman -S [paket1] [paket2]	Eines oder mehrere Pakete installieren oder aktualisieren
pacman -Sy	Lokale Datenbank aktualisieren
pacman -Su	Alle installierten Pakete aktualisieren
pacman -Syy	Lokale Datenbank komplett neu aufbauen und aktualisieren
pacman -Syuu	Alle installierten Pakete downgraden (von Testing nach Core/Extra oder von Community-Testing nach Community)
pacman -Ss [paket]	Sucht nach installierbaren Paketen. Es reicht ein Teil des Paketnamens oder der Paketbeschreibung
pacman -Sg	Sucht nach installierbaren Paketgruppen
pacman -Sg [paketgruppe]	Zeigt den Inhalt einer Paketgruppe
pacman -Q	Zeigt alle installierten Pakete inklusive Versionsnummer auf dem System an
pacman -Qs [paket]	Sucht nach bereits installierten Paketen
pacman -R [paket]	Paket entfernen
pacman -Rd [paket]	Paket entfernen ohne auf Abhängigkeiten zu achten. ACHTUNG: Das Paket wird auch entfernt, wenn es noch von anderen Paketen gebraucht wird!
pacman -Rdd [paket]	Paket entfernen, wie oben, jedoch werden alle Abhängigkeitsprüfungen ausgeschaltet
pacman -Rs [paket]	Paket mit allen benötigten Abhängigkeiten entfernen (wenn diese nicht von anderen installierten Paketen benötigt werden)
pacman -Rss [paket]	Paket mit allen benötigten Abhängigkeiten und deren Abhängigkeiten entfernen
pacman -D [paket]	Status eines installierten Programms ändern, ohne es "drüber zu installieren"
pacman -Qi [paket]	Informationen zu bereits installiertem Paket anzeigen
pacman -Si [paket]	Informationen zu (noch) nicht installierten Paketen anzeigen
pacman -Sw [paket]	Paket herunterladen, ohne es zu installieren
pacman -S testing/[paket]	Paket aus einem spezifischen Repo (hier: testing) installieren
pacman -U [paket-datei]	Ein lokales Paket installieren (nicht aus einem Repo)
pacman -Runs [paket]	Paket inklusive aller Abhängigkeiten entfernen
pacman -Qdt	Verwaiste Pakete anzeigen, die als Abhängigkeiten installiert wurden, aber nicht mehr von anderen Paketen benötigt werden
pacman -Qet	Pakete anzeigen, die ausdrücklich installiert wurden, aber nicht von anderen als Abhängigkeit benötigt werden
pacman -Scc	Leert den lokalen Speicher von Pacman (/var/cache/pacman/pkg)
pacman -Sc	Löscht nicht mehr benötigte und veraltete Pakete aus (/var/cache/pacman/pkg) und unbenutzte Repositorien aus /var/lib/pacman/.
pacman -Ql [paket]	Zeigt alle installierten Dateien des Pakets im System
pacman -Qm	Pakete anzeigen, die sich in keinem aktivierten Repo laut /etc/pacman.conf befinden
pacman -Qo [/pfad/zur/datei]	Zeigt das Paket an, welches die gesuchte Datei enthält
pacman -Qu	Zeigt an, für welche installierten Pakete Updates verfügbar sind
pacman -Qk	Überprüft alle Pakete auf fehlende Dateien. Einfachhalber pacman -Qk mit grep warning benutzen
Es können auch mehrere Befehle kombiniert werden. Z.B. alle verwaisten Pakete deinstallieren:
pacman -Rsn $(pacman -Qdtq)

Ab Version 5.0.0 können auch nicht installierte Pakete nach Dateien durchsucht werden.
Befehl	Beschreibung
pacman -Fy	Lokale Datei-Datenbank aktualisieren
pacman -Fs [datei]	Paket suchen das die Datei enthält
pacman -Fsx [regex]	Wie -Fs, aber Suche mit regulären Ausdrücken. Hilfreich falls der vollständige Dateiname unbekannt ist.
pacman -Fl [paket]	Alle Dateien des Paketes anzeigen.
pacman -Fo [/pfad/zur/datei]	Paket suchen das eine bestimmte Datei enthält


pacman -Scc
paccache -h

rankmirrors -n 0 -t -v /etc/pacman.d/mirrorlist





