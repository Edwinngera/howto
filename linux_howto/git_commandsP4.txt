


-------------
#gvfsd-fuse on /run/user/1000/gvfs type fuse.gvfsd-fuse (rw,nosuid,nodev,relatime,user_id=1000,group_id=1000)
mount -t cifs -o username=root,password=xxxxx //192.168.0.186/asmedia-hdd /media/asmedia-hdd
sudo mount -t cifs -o user=data,password=data //nas/data /mnt/nas-data
/usr/share/gvfs/mounts/smb.mount
gvfs-mount smb://WORKGROUP\;root@192.168.0.186/asmedia-hdd
gvfs-mount -l
cd ~/.gvfs/smb-share\:domain\=WORKGROUP\,server\=192.168.0.186\,share\=asmedia-hdd\,user\=root/
watch -- du -h test.mkv
//192.168.0.186/asmedia-hdd          /media/asmedia-hdd          cifs            rw,workgroup=WORKGROUP,username=root,password=xxxxx,noauto,users,iocharset=utf8      0     0
chmod 0755 /usr/sbin/mount.cifs






env | grep user
mount | grep gvfs | awk '{print $3}'
mount | grep gvfs
gksu nano /etc/samba/smb.conf
sudo service smbd restart
[Public]
path = /home/barb/Public
browseable = yes
guest ok = no
force group = plugdev
writeable = yes
create mask = 0664
force directory mode = 2775
sudo bindfs -o perms=0666:+X,group=plugdev /home/barb/Shared /home/barb/Shared






git clone /run/user/1000/gvfs/smb-share:server=192.168.1.122,share=git/Svr10 -b development Svr10 --recursive
pwd /run/user/1000/gvfs/smb-share:server=samba,share=samba/production/GNC
$ touch foo
$ gvfs-trash foo; echo $status






git init $HOME
git --git-dir $HOME/.git status

git --git-dir=/mycode/.git --work-tree=/mycode status
git --git-dir=/home/username/src/s3cmd/.git --work-tree=/home/username/src/s3cmd pull
git --git-dir="$HOME/foo/.git" --work-tree="$HOME/foo" status
git --git-dir=~/foo/.git --work-dir=~/foo status


git config core.autocrlf input
git rm --cached -r .
git reset --hard
--------

https://git-scm.com/book/be/v2/Customizing-Git-Git-Configuration

If you’re on a Windows machine, set it to true – this converts LF endings into CRLF when you check out code:

$ git config --global core.autocrlf true

If you’re on a Linux or Mac system that uses LF line endings, then you don’t want Git to automatically convert them when you check out files; however, if a file with CRLF endings accidentally gets introduced, then you may want Git to fix it. You can tell Git to convert CRLF to LF on commit but not the other way around by setting core.autocrlf to input:

$ git config --global core.autocrlf input
This setup should leave you with CRLF endings in Windows checkouts, but LF endings on Mac and Linux systems and in the repository.

If you’re a Windows programmer doing a Windows-only project, then you can turn off this functionality, recording the carriage returns in the repository by setting the config value to false:

$ git config --global core.autocrlf false


sed -i 's/0770/0775/g' vendor/magento/framework/Filesystem/DriverInterface.php
sed -i 's/0660/0664/g' vendor/magento/framework/Filesystem/DriverInterface.php
find pub -type f -exec chmod 664 {} \;
find pub -type d -exec chmod 775 {} \;


