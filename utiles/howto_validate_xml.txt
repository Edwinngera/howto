

########################################################
#
#   SVG XML Beautifying
#
########################################################

xmllint --valid --noout order_test.xml
# xmllint --valid --dtdvalid mydtd.dtd mydoc.xml
# xmllint --noout --schema http://www.w3.org/2001/XMLSchema.xsd my_schema.xsd
# xmllint --noout --schema test.xsd test.xml

# https://linux.die.net/man/1/xmllint
# http://xmlsoft.org/xmllint.html
# http://infohost.nmt.edu/tcc/help/xml/lint.html
# http://xmlstar.sourceforge.net/docs.php
# http://www.sagehill.net/docbookxsl/ProfilingDuplicateID.html
# http://manpages.ubuntu.com/manpages/trusty/man1/xmllint.1.html
# http://www.commandlinefu.com/commands/view/4330/validate-xml-in-a-shell-script.

xmllint --noout some.xml 2>&1 >/dev/null || exit 1
# apt-get install xmlstarlet

# xmllint --format --pretty 1 --load-trace --debug --schema /path/to/my_schema_file.xsd /path/to/my_xml_file.xml
# xmllint --xpath '//element/@attribute' file.xml
# xmlstarlet sel -t -v "//element/@attribute" file.xml
# saxon-lint --xpath '//element/@attribute' file.xml
# xmllint --valid --noout *.xml **/*.xml 2>&1 | awk "/no DTD found/ {e=0} /xsd/ {e=0}"

# python -c "from lxml.etree import parse; from sys import stdin; print '\n'.join(parse(stdin).xpath('//element/@attribute'))"
# python -c "import sys, xml.dom.minidom as d; d.parse(sys.argv[1])" FILE

# xmllint  --noout doc.xml --schema schema.xsd
# xmllint --schema schema.xsd doc.xml

----------------------------------------------------------------------------

validate a DTD stored in the same file:
xmllint --valid --noout fileWithDTD.xml

validate a DTD stored in a separate file:
xmllint --dtdvalid DTD.dtd --noout fileWithoutDTD.xml

validate an XSD stored in a separate file:
xmllint --schema schema.xsd --noout file.xml

validate xml based on remote scheme file
xmllint --schema http://somesite.de/somesitefile.xsd --noout file.xml

# http://fahdshariff.blogspot.de/2011/10/validating-xml-with-xmllint.html

----------------------------------------------------------------------------

sudo apt-get install libxml2-utils
# xmllint --noout file.xml

xmllint â€“format file.xml
xmllint -format -recover nonformatted.xml > formated.xml
xmllint --format ugly.xml --output pretty.xml
cat unformatted.json | python -m json.tool > formatted.json
python -m json.tool > formatted.json
tidy -xml -i your-file.xml > output.xml

xmllint --format -
xml_pp
xmlstarlet format --indent-tab
tidy -xml -i -
python -c 'import sys;import xml.dom.minidom;s=sys.stdin.read();print xml.dom.minidom.parseString(s).toprettyxml()'
java -cp /usr/share/java/saxon/saxon9he.jar net.sf.saxon.Query \ -s:- -qs:/ '!indent=yes'
saxon-lint --indent --xpath '/' -

http://stackoverflow.com/questions/16090869/how-to-pretty-print-xml-from-the-command-line
http://stackoverflow.com/questions/21275928/how-to-format-xml-document-in-linux
http://richardlog.com/post/12743073497/pretty-printing-json-and-xml-on-mac-osx
http://stackoverflow.com/questions/16090869/how-to-pretty-print-xml-from-the-command-line

http://stackoverflow.com/questions/306316/determine-if-two-rectangles-overlap-each-other
http://stackoverflow.com/questions/13390333/two-rectangles-intersection
http://stackoverflow.com/questions/2752349/fast-rectangle-to-rectangle-intersection
http://math.stackexchange.com/questions/1278665/how-to-check-if-two-rectangles-intersect-rectangles-can-be-rotated

https://nagios-plugins.org/doc/extra-opts.html
http://www.perlmonks.org/?node_id=139970
http://search.cpan.org/dist/App-Maisha/script/maisha#--config_|_-c
http://stackoverflow.com/questions/2014862/how-can-i-access-ini-files-from-perl
http://www.perl.com/pub/2007/07/12/options-and-configuration.html
http://search.cpan.org/~shlomif/Config-IniFiles-2.94/lib/Config/IniFiles.pm
http://perl.mines-albi.fr/perl5.8.5/site_perl/5.8.5/AppConfig.html
