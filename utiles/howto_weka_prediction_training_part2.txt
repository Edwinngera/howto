WEKA


OpenML is integrated in the Weka (Waikato Environment for Knowledge Analysis) Experimenter and the Command Line Interface.
Installation

OpenML is available as a weka extension in the package manager
Download the latest development version (3.7.13 or higher).
Launch Weka, or start from commandline:
java -jar weka.jar

If you need more memory (e.g. 1GB), start as follows:
java -Xmx1G -jar weka.jar
Open the package manager (Under 'Tools')
Select package OpenmlWeka and click install. Afterwards, restart WEKA.
From the Tools menu, open the 'OpenML Experimenter'.
Quick Start (Graphical Interface)

OpenML Weka Screenshot
You can solve OpenML Tasks in the Weka Experimenter, and automatically upload your experiments to OpenML (or store them locally).

From the Tools menu, open the 'OpenML Experimenter'.
Enter your API key in the top field (log in first). You can also store this in a config file (see below).
In the 'Tasks' panel, click the 'Add New' button to add new tasks. Insert the task id's as comma-separated values (e.g., '1,2,3,4,5'). Use search to find interesting tasks and click the icon to list the ID's. In the future this search will also be integrated in WEKA.
Add algorithms in the "Algorithm" panel.
Go to the "Run" tab, and click on the "Start" button.
The experiment will be executed and sent to OpenML.org.
The runs will now appear on OpenML.org. You can follow their progress and check for errors on your profile page under 'Runs'.
Quick Start CommandLine Interface

The Command Line interface is useful for running experiments automatically on a server, without using a GUI.
Create a config file called openml.conf in a new directory called .openml in your home dir. It should contain the following line:
api_key = YOUR_KEY

Execute the following command:
java -cp weka.jar openml.experiment.TaskBasedExperiment -T <task_id> -C <classifier_classpath> -- <parameter_settings>

For example, the following command will run Weka's J48 algorithm on Task 1:
java -cp OpenWeka.beta.jar openml.experiment.TaskBasedExperiment -T 1 -C weka.classifiers.trees.J48
The following suffix will set some parameters of this classifier:
-- -C 0.25 -M 2
Please report any bugs that you may encounter to j.n.van.rijn@liacs.leidenuniv.nl.

----------------------------------------------------------------------------------
http://php.inspire.net.nz/manual/en/function.shell-exec.php
----------------------------------------------------------------------------------
https://github.com/openml/website/blob/master/openml_OS/views/pages/frontend/guide/subpage/plugin_weka.php
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/algorithm_setup.sql
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/input.sql
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/implementation.sql
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/math_function.sql
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/input_setting.sql
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/data/sql/quality.sql
https://github.com/openml/website/blob/3de2fef327af06ce9d63773513a0119aa81bc83f/openml_OS/helpers/api_helper.php
https://github.com/openml/website/blob/6350290deee7797f43a2ee5e628603e6dfd49a75/openml_OS/models/api/v1/swagger.json
https://github.com/openml/website/blob/b88926fdd50a32119c7b52ef35b3016972026585/openml_OS/models/api/v1/Api_setup.php
https://github.com/openml/website/blob/a0c24d60a4b7b9cd6f937bbe88fd56c99ccbf058/openml_OS/models/api/v1/Api_run.php
https://github.com/openml/website/blob/3db1f75f74b9a9d105a30d0579cadbf340df1004/openml_OS/libraries/ElasticSearch.php
----------------------------------------------------------------------------------
http://www.cs.waikato.ac.nz/ml/weka/documentation.html
----------------------------------------------------------------------------------
https://github.com/selvinsource/mongodb-datamining-shell/wiki/Weka-MongoDB

mongo mongodbdm --eval "var inputCollectionName = \"weatherData\", target = \"play\""
mongo mongodbdm --eval "var inputCollectionName = \"iris\", k = 3" datamining/clustering/kmeans.js
----------------------------------------------------------------------------------

http://weka.wikispaces.com/Primer

@data
sunny,FALSE,85,85,no
sunny,TRUE,80,90,no
overcast,FALSE,83,86,yes
rainy,FALSE,70,96,yes
rainy,FALSE,68,80,yes

java weka.core.converters.CSVLoader data.csv > data.arff
java weka.core.converters.C45Loader c45_filestem > data.arff
java weka.classifiers.rules.ZeroR -t soybean.arff
java weka.classifiers.trees.J48 -t soybean.arff
java weka.filters.supervised.attribute.Discretize -i data/iris.arff -o iris-nom.arff -c last
java weka.filters.supervised.attribute.Discretize -i data/cpu.arff -o cpu-classvendor-nom.arff -c first
java weka.filters.supervised.attribute.NominalToBinary -i data/contact-lenses.arff -o contact-lenses-bin.arff -c last
java weka.filters.supervised.instance.Resample -i data/soybean.arff -o soybean-5%.arff -c last -Z 5
java weka.filters.supervised.instance.Resample -i data/soybean.arff -o soybean-uniform-5%.arff -c last -Z 5 -B 1

java weka.filters.supervised.instance.StratifiedRemoveFolds -i data/soybean.arff -o soybean-train.arff \
   -c last -N 4 -F 1 -V
java weka.filters.supervised.instance.StratifiedRemoveFolds -i data/soybean.arff -o soybean-test.arff \
   -c last -N 4 -F 1

java weka.filters.unsupervised.attribute.Remove -R 1-2 -i data/iris.arff -o iris-simplified.arff
java weka.filters.unsupervised.attribute.Remove -V -R 3-last -i data/iris.arff -o iris-simplified.arff
java weka.filters.unsupervised.instance.Resample -i data/soybean.arff -o soybean-5%.arff -Z 5
java weka.filters.unsupervised.instance.RemoveFolds -i data/soybean.arff -o soybean-train.arff -c last -N 4 -F 1 -V
java weka.filters.unsupervised.instance.RemoveFolds -i data/soybean.arff -o soybean-test.arff -c last -N 4 -F 1

java weka.filters.unsupervised.instance.RemoveWithValues -i data/soybean.arff \
   -o soybean-without_herbicide_injury.arff -V -C last -L 19

java weka.classifiers.trees.J48 -t data/weather.numeric.arff
java weka.classifiers.bayes.NaiveBayes -K -t soybean-train.arff -T soybean-test.arff -p 0

java -Xmx1024m weka.classifiers.trees.J48 -t data.arff -k -d J48-data.model >&! J48-data.out &
cat *.out | grep -A 3 "Stratified" | grep "^Correctly"

java weka.classifiers.trees.J48 -l J48-data.model -T new-data.arff

----------------------------------------------------------------------------------

#!/bin/csh
foreach f ($*)
  set run=1
  while ( $run <= 30 )
    mkdir $run >&! /dev/null
    java weka.filters.supervised.instance.StratifiedRemoveFolds -N 4 -F 1 -S $run -c last -i ../$f -o $run/t_$f
    java weka.filters.supervised.instance.StratifiedRemoveFolds -N 4 -F 1 -S $run -V -c last -i ../$f -o $run/t0$f
    foreach nr (0 1 2 3 4 5)
      set nrp1=$nr
      @ nrp1++
      java weka.filters.supervised.instance.Resample -S 0 -Z 83 -c last -i $run/t$nr$f -o $run/t$nrp1$f
    end

    echo Run $run of $f done.
    @ run++
  end
end

----------------------------------------------------------------------------------

java weka.classifiers.meta.ClassificationViaRegression -W weka.classifiers.functions.LinearRegression -S 1 \
   -t data/iris.arff -x 2

java weka.classifiers.meta.ClassificationViaRegression -W "weka.classifiers.functions.LinearRegression -S 1" \
   -t data/iris.arff -x 2

java weka.classifiers.meta.ClassificationViaRegression -W weka.classifiers.functions.LinearRegression \
   -t data/iris.arff -x 2 -- -S 1

java weka.classifiers.meta.Stacking -B "weka.classifiers.lazy.IBk -K 10" \
   -M "weka.classifiers.meta.ClassificationViaRegression -W weka.classifiers.functions.LinearRegression -- -S 1" \
   -t data/iris.arff -x 2


