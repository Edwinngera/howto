
#######################################################
#
# How to install old version of Image Magik
#
#######################################################

apt-get install imagemagick imagemagick-devel imagemagick-dbg

Next, download the ImageMagick old package
tar xvf ImageMagick-6.9.3-1.tar.bz2
cd ImageMagick-6.9.3
./configure
make
sudo make install

# check version
/usr/local/bin/convert -list configure
which convert

---------------------------------------------------------------------

https://www.imagemagick.org/download/releases/
https://www.imagemagick.org/download/
http://www.nicksherlock.com/2013/11/installing-ubuntu-raring-imagemagick-package-on-precise/

http://stackoverflow.com/questions/26075225/how-can-i-check-if-file-exists-with-exception-handeling
https://packages.debian.org/de/wheezy/librsvg2-bin

apt-show-versions <package>
aptitude versions <package>
http://unix.stackexchange.com/questions/6284/check-package-version-using-apt-get-aptitude

############################################
#
#  batik-rasterizer PNG 2 SVG
#
############################################

http://stackoverflow.com/questions/6154715/running-java-jar-from-php-exec-or-shell-exec-isnt-working-for-batik
exec('java -jar "path/to/batik/batik-rasterizer.jar" -m image/png -d "pathtoimg/temp/2fa6.png" -w 800  "/pathtoimg/temp/2fab6.svg"');

------------------------------------

https://svn.apache.org/repos/asf/xmlgraphics/site/deploy/batik/old/svgrasterizer.html
https://xmlgraphics.apache.org/batik/tools/rasterizer.html
http://dev.cs.ovgu.de/java/batik/tools/rasterizer.html

java -jar batik-rasterizer.jar -d myDir -m image/jpeg samples/*.svg
java -jar batik-rasterizer.jar -m image/jpeg -q 0.8 "/pathtoimg/temp/2fab6.svg"

Where the options are:

-d <dir|file>. Output directory. If there is a single input file, this can be a file.
-m <mimeType>. Output mime type, one of image/png, image/jpeg, application/pdf, image/tiff.
-w <width>. Output width. This is a floating point value.
-h <height>. Output height. This is a floating point value.
-maxw <width>. Maximum output width. This is a floating point value.
-maxh <height>. Maximum output height. This is a floating point value.
-a <area>. Output area. The format for <area> is x,y,w,h, where x, y, w and h are floating point values.
-bg <color>. Uuput color. The format for <color> is a.r.g.b, where a, r, g and b are integer values.
-cssMedia <media>.CSS media type for which the source SVG files should be converted.
-cssAlternate <alternate>. CSS alternate stylesheet to use when converting the source SVG files.
-cssUser<userStylesheet>. CSS user stylesheet URI to apply to converted SVG documents in addition to any other referened or embeded stylesheets.
-lang <userLanguage>. User language to use when converting SVG documents.
-q <quality>. Quality for the output image. This is only relevant for the image/jpeg mime type.
-dpi <resolution>. Resolution for the ouptut image.
-validate Controls whether the source SVG files should be validated.
-onload Controls if the source SVG files must be rasterize after dispatching the 'onload' event.
-scriptSecurityOff Removes any security check on the scripts running as a result of dispatching the onload event.
-scripts<listOfAllowedScripts> List of script types (i.e., values for the type attribute in the <script> tag) which should be loaded.

---
http://stackoverflow.com/questions/4120567/convert-pdf-to-svg

inkscape -l out.svg in.pdf
pdf2svg input.pdf output_page%d.svg all

java -jar ./lib/batik-rasterizer.jar -w 72 -h 72 -dpi 240 -d bar\hdpi -m image/png foo

java -jar batik-rasterizer-1.8.jar -Djava.awt.headless=true -m image/png -d test.png -w 600 chart.svg
java -jar batik-ttf2svg.jar /usr/home/myFont.ttf -l 48 -h 57 -id MySVGFont -o mySVGFont.svg -testcard
java -jar batik-rasterizer.jar -scriptSecurittyOff -m image/png -d image.png image.svg

# http://stackoverflow.com/questions/10349273/script-to-convert-multiple-svg-images-to-a-svg-font-file/11130092#11130092
# http://stackoverflow.com/questions/35471957/how-do-i-properly-include-the-batik-library-in-my-java-project/35474482#35474482

#############################################

exec("inkscape -f map.svg -e map.png -a ".($x-intval($tam*0.75)).":".($yintval($tam*0.75)).":".($x+intval($tam*0.75)).":".($y+intval($tam*0.75))." -w".$frmBigTam." -h". $frmBigTam." -y 255");
exec("java -jar batik-1.7/batik-rasterizer.jar batik-1.7/Epl01.svg -w 300 -h 300 -a ".($x-$tam/2).",".($y-$tam/2).",".$tam.",".$tam." -bg 255.255.255.255");

https://people.kth.se/~maguire/DEGREE-PROJECT-REPORTS/100313-Alejandro_Arcos-with-cover.pdf

java -Djava.awt.headless=true -jar batik-rasterizer.jar -m image/png -d temp/out.png temp/in.svg 2>&1

java -jar "<PATH TO JAR>/batik-rasterizer.jar" -d "/<output folder>/" -m image/png --snapshotTime <TIME> "/<INPUTFILE>.SVG"
ffmpeg -i "%d.png" -r 25 -b:v 10000k --f avi -vcodec msmpeg4v3 <OUTPUT FILENAME>.mpg

http://www.codegists.com/search?q=batik-rasterizer
https://oliverbinns.com/articles/making-animated-cartograms/





###############################################
#
# ERROR: ImageMagik SVG Lib
# convert.im6: delegate failed `"rsvg-convert" -o "%o" "%i"' @ error/delegate.c/InvokeDelegate/1065.
#
###############################################

convert -background none -geometry !48x48 freeplane.svg freeplane.png

convert --version
convert -list configure | grep DELEGATES
# DELEGATES     bzlib djvu gs gvc jpeg jng png rsvg tiff x11 zlib
convert -list delegate | grep 'svg ='
# svg =>          "rsvg-convert" -o "%o" "%i"
convert -list format # check formats
convert -list format | grep SVG

	MSVG  SVG    rw+   ImageMagick's own SVG internal renderer
	SVG  SVG     rw+   Scalable Vector Graphics (RSVG 2.40.16)
	SVGZ  SVG    rw+   Compressed Scalable Vector Graphics (RSVG 2.40.16)

// How to fix

sudo apt-get update
sudo apt-get install librsvg2-bin
sudo apt-get install librsvg2-2
sudo apt-get install libmagickcore4-extra

http://blog.wjlr.org.uk/2013/04/10/imagemagick-insanity.html
https://github.com/3snowp7im/urn/issues/12
https://bugs.launchpad.net/openastro.org/+bug/1551488

java -jar batik-rasterizer.jar -scriptSecurityOff -bg 255.255.0.255 -m image/png -w 100 -dpi 72 -d $tmpFile $svgFile
convert -background magenta -density 100 -resize 150x $svgDPFile $tmpDPFile

convert -strip -profile ../USWebCoatedSWOP.icc 0054620.psd -profile ../RGB_Profiles/AdobeRGB1998.icc 0054620rgb.jpg

https://stackoverflow.com/questions/29847486/imagick-unable-to-assign-or-convert-color-profile
identify -verbose fullSize_MK3L7748.jpg | grep icc
identify -verbose test_blackScaled.jpg | grep icc

------------------------------------

$image = new Imagick("fullSize_MK3L7748.jpg");

// This isn't required - but it could be used
// $image->transformImageColorspace(\Imagick::COLORSPACE_SRGB);

$profile = file_get_contents("sRGB_IEC61966-2-1_black_scaled.icc");
$image->profileImage("icc", $profile);
$image->writeImage("test_blackScaled.jpg");




------------------------------------------------------------------

avconv -threads 0 -i 00000.MTS -target ntsc-dvd -qscale 0 -deinterlace -s hd1080 00000.mpg

https://www.ostechnix.com/install-arch-linux-latest-version/
https://www.ostechnix.com/install-microsoft-visual-studio-code-linux/
https://www.ostechnix.com/easiest-way-install-configure-openvpn-server-linux/
https://doc.owncloud.org/desktop/2.1/navigating.html
https://www.ostechnix.com/find-geolocation-ip-address-commandline/
https://doc.owncloud.org/
https://docs.nextcloud.com/server/11/user_manual/
https://www.ostechnix.com/change-priority-process-linux/
https://www.ostechnix.com/owncloud-setup-your-local-own-cloud-server/
https://www.ostechnix.com/get-notification-terminal-task-done/
https://www.ostechnix.com/save-commands-terminal-use-demand/
https://www.ostechnix.com/install-nextcloud-ubuntu-16-04-lts/
https://www.ostechnix.com/find-rebooted-linux-system/

convert -background magenta -density 100 -resize 150x page1.svg outfile2.png
xmllint --format page1.svg > page1a.svg

sudo update-alternatives --config x-terminal-emulator
replace in settings xterm with gnome-terminal

-------------------------------------------------------




#####################################################################
#
#   Replace transparency in PNG images with white background
#
#####################################################################

http://www.fmwconcepts.com/imagemagick/tidbits/image.php
https://stackoverflow.com/questions/2322750/replace-transparency-in-png-images-with-white-background
https://superuser.com/questions/1298159/imagemagick-how-to-change-images-background-color-with-anti-aliasing
https://unix.stackexchange.com/questions/228881/alpha-removal-with-imagemagick-is-bad-but-only-with-a-white-background
https://gist.github.com/MohamedAlaa/d9b54cd856b3edce1510
https://github.com/ImageMagick/ImageMagick/issues/220

convert -flatten img1.png img1-white.png
convert image.png -background white -alpha remove white.png
convert png.png -resize 500x400  -background white -flatten  png_small.jpg
convert foo.pdf -background "#FFFFFF" -flatten foo.jpg

convert -density 750 -alpha remove -alpha off a.pdf a.png
convert -density 100 -alpha remove -alpha off a.pdf 90-white.png
convert -density 300 -alpha remove -alpha off a.pdf png24:300-white-24.png

convert fox.jpg ( -clone 0 -fuzz 11% -transparent white -blur 0x1 ) -compose copy_opacity -composite fox_transparent_fuzzed_blurry_mask.png

convert fox.jpg -type Grayscale -negate -fill white -fuzz 11% +opaque "#000000" -blur 0x1 fox_blur_mask.jpg
convert fox.jpg fox_blur_mask.jpg -compose copy_opacity -composite fox_transparent_blur_mask_result.png

convert fox.jpg -bordercolor white -border 1x1 -fuzz 11% -fill none -floodfill +0+0 white -shave 1x1 fox_flood_2_minimal.png

*
*
*

Remove white background color of an image in ImageMagick
$ convert  your.jpg  -transparent white  your.png

Flatten a transparent image with a white background:
convert -flatten img1.png img1-white.png

Make an image transparent
convert -transparent '#FFFFFF' nontransparent.gif transparent.png
convert an image into tiles
convert -size 3200x3200 tile:single_tile.png final.png

making a montage from a collection of images
montage -geometry +0+0 -background transparent *png montage.png

inverting colors
convert before.png -negate after.png

generating a favicon
convert large_image.png -resize 16x16! favicon.ico

Resize keep aspect ratio
convert input.jpg -resize 250x90 output.jpg

Resize keep minimum image size
convert input.jpg -resize '250x90^' output.jpg

Clone
This code reads in the image, copys it with +clone, resizes and saves it. Then resizes and saves the next size. The part of the code within the ( ) has no effect on any of the other part of the code.

convert input.jpg \( +clone -resize 600x600 -write first_save.jpg +delete \) -resize 60x60 thumbnail.jpg
Speed up jpg resize
Defining the size of the jpg when loading it will speed up the resizing process. This is done by adding the -size option.

convert -define jpeg:size=250x90 input.jpg -resize 250x90 output.jpg
adding numbers to a tiled image
I also once needed to add numbers to a individual parts of a tiled image. I found it easier to script this with Ruby rather than use the shell's looping constructs:

cmd = (0..324).to_a.inject([]) do |cmd,n|
  y=(n/25*32)+15; x=((n%25)*32)+15
  cmd << "-draw 'fill red text #{x},#{y} \"#{n}\"'"
end

convert img.png #{cmd.join(' ')} annotated_img.png

---

gs -q -dQUIET -dSAFER -dBATCH -dNOPAUSE -dNOPROMPT -dMaxBitmap=500000000 -dAlignToPixels=0 -dGridFitTT=1 -sDEVICE=pngalpha -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -r50 -sOutputFile=test_cmyk_blue_gs-%d.png test_cmyk_blue.pdf

convert -colorspace rgb -verbose test_cmyk_blue.pdf i:\test.pn
convert -background "#FF0000" test_rgb.pdf -flatten testrgb.png
convert test_rgb.pdf -background "#FF0000" -flatten testrgb.png



##############################################################################

SVG2PDF
https://superuser.com/questions/381125/how-do-i-convert-an-svg-to-a-pdf-on-linux

##############################################################################

sudo apt-get install librsvg2-bin
$ rsvg-convert -f pdf -o t.pdf t.svg

#sudo apt-get install inkscape
#$ inkscape t.svg --export-pdf=t.pdf









